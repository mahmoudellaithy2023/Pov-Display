
POV_Display_Fan.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001eb0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00001eb0  00001f44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  00800168  00800168  0000204c  2**0
                  ALLOC
  3 .stab         000015e4  00000000  00000000  0000204c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001859  00000000  00000000  00003630  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00004e89  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f2  00000000  00000000  00005029  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000240b  00000000  00000000  0000521b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001386  00000000  00000000  00007626  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011d6  00000000  00000000  000089ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  00009b84  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002f6  00000000  00000000  00009d44  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000096e  00000000  00000000  0000a03a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000a9a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 46 0e 	jmp	0x1c8c	; 0x1c8c <__vector_6>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 dd 0e 	jmp	0x1dba	; 0x1dba <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b1 e0       	ldi	r27, 0x01	; 1
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	ac 37       	cpi	r26, 0x7C	; 124
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	11 e0       	ldi	r17, 0x01	; 1
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e0 eb       	ldi	r30, 0xB0	; 176
      78:	fe e1       	ldi	r31, 0x1E	; 30
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 37 0c 	call	0x186e	; 0x186e <main>
      8a:	0c 94 56 0f 	jmp	0x1eac	; 0x1eac <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 1f 0f 	jmp	0x1e3e	; 0x1e3e <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 3b 0f 	jmp	0x1e76	; 0x1e76 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 47 0f 	jmp	0x1e8e	; 0x1e8e <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 47 0f 	jmp	0x1e8e	; 0x1e8e <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 1f 0f 	jmp	0x1e3e	; 0x1e3e <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 3b 0f 	jmp	0x1e76	; 0x1e76 <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 27 0f 	jmp	0x1e4e	; 0x1e4e <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 43 0f 	jmp	0x1e86	; 0x1e86 <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 47 0f 	jmp	0x1e8e	; 0x1e8e <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 47 0f 	jmp	0x1e8e	; 0x1e8e <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 47 0f 	jmp	0x1e8e	; 0x1e8e <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 2f 0f 	jmp	0x1e5e	; 0x1e5e <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 4b 0f 	jmp	0x1e96	; 0x1e96 <__epilogue_restores__+0x20>

00000952 <__floatunsisf>:
     952:	a8 e0       	ldi	r26, 0x08	; 8
     954:	b0 e0       	ldi	r27, 0x00	; 0
     956:	ef ea       	ldi	r30, 0xAF	; 175
     958:	f4 e0       	ldi	r31, 0x04	; 4
     95a:	0c 94 27 0f 	jmp	0x1e4e	; 0x1e4e <__prologue_saves__+0x10>
     95e:	7b 01       	movw	r14, r22
     960:	8c 01       	movw	r16, r24
     962:	61 15       	cp	r22, r1
     964:	71 05       	cpc	r23, r1
     966:	81 05       	cpc	r24, r1
     968:	91 05       	cpc	r25, r1
     96a:	19 f4       	brne	.+6      	; 0x972 <__floatunsisf+0x20>
     96c:	82 e0       	ldi	r24, 0x02	; 2
     96e:	89 83       	std	Y+1, r24	; 0x01
     970:	60 c0       	rjmp	.+192    	; 0xa32 <__floatunsisf+0xe0>
     972:	83 e0       	ldi	r24, 0x03	; 3
     974:	89 83       	std	Y+1, r24	; 0x01
     976:	8e e1       	ldi	r24, 0x1E	; 30
     978:	c8 2e       	mov	r12, r24
     97a:	d1 2c       	mov	r13, r1
     97c:	dc 82       	std	Y+4, r13	; 0x04
     97e:	cb 82       	std	Y+3, r12	; 0x03
     980:	ed 82       	std	Y+5, r14	; 0x05
     982:	fe 82       	std	Y+6, r15	; 0x06
     984:	0f 83       	std	Y+7, r16	; 0x07
     986:	18 87       	std	Y+8, r17	; 0x08
     988:	c8 01       	movw	r24, r16
     98a:	b7 01       	movw	r22, r14
     98c:	0e 94 22 05 	call	0xa44	; 0xa44 <__clzsi2>
     990:	fc 01       	movw	r30, r24
     992:	31 97       	sbiw	r30, 0x01	; 1
     994:	f7 ff       	sbrs	r31, 7
     996:	3b c0       	rjmp	.+118    	; 0xa0e <__floatunsisf+0xbc>
     998:	22 27       	eor	r18, r18
     99a:	33 27       	eor	r19, r19
     99c:	2e 1b       	sub	r18, r30
     99e:	3f 0b       	sbc	r19, r31
     9a0:	57 01       	movw	r10, r14
     9a2:	68 01       	movw	r12, r16
     9a4:	02 2e       	mov	r0, r18
     9a6:	04 c0       	rjmp	.+8      	; 0x9b0 <__floatunsisf+0x5e>
     9a8:	d6 94       	lsr	r13
     9aa:	c7 94       	ror	r12
     9ac:	b7 94       	ror	r11
     9ae:	a7 94       	ror	r10
     9b0:	0a 94       	dec	r0
     9b2:	d2 f7       	brpl	.-12     	; 0x9a8 <__floatunsisf+0x56>
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	60 e0       	ldi	r22, 0x00	; 0
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	81 e0       	ldi	r24, 0x01	; 1
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	a0 e0       	ldi	r26, 0x00	; 0
     9c2:	b0 e0       	ldi	r27, 0x00	; 0
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__floatunsisf+0x7c>
     9c6:	88 0f       	add	r24, r24
     9c8:	99 1f       	adc	r25, r25
     9ca:	aa 1f       	adc	r26, r26
     9cc:	bb 1f       	adc	r27, r27
     9ce:	2a 95       	dec	r18
     9d0:	d2 f7       	brpl	.-12     	; 0x9c6 <__floatunsisf+0x74>
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	a1 09       	sbc	r26, r1
     9d6:	b1 09       	sbc	r27, r1
     9d8:	8e 21       	and	r24, r14
     9da:	9f 21       	and	r25, r15
     9dc:	a0 23       	and	r26, r16
     9de:	b1 23       	and	r27, r17
     9e0:	00 97       	sbiw	r24, 0x00	; 0
     9e2:	a1 05       	cpc	r26, r1
     9e4:	b1 05       	cpc	r27, r1
     9e6:	21 f0       	breq	.+8      	; 0x9f0 <__floatunsisf+0x9e>
     9e8:	41 e0       	ldi	r20, 0x01	; 1
     9ea:	50 e0       	ldi	r21, 0x00	; 0
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	4a 29       	or	r20, r10
     9f2:	5b 29       	or	r21, r11
     9f4:	6c 29       	or	r22, r12
     9f6:	7d 29       	or	r23, r13
     9f8:	4d 83       	std	Y+5, r20	; 0x05
     9fa:	5e 83       	std	Y+6, r21	; 0x06
     9fc:	6f 83       	std	Y+7, r22	; 0x07
     9fe:	78 87       	std	Y+8, r23	; 0x08
     a00:	8e e1       	ldi	r24, 0x1E	; 30
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	8e 1b       	sub	r24, r30
     a06:	9f 0b       	sbc	r25, r31
     a08:	9c 83       	std	Y+4, r25	; 0x04
     a0a:	8b 83       	std	Y+3, r24	; 0x03
     a0c:	12 c0       	rjmp	.+36     	; 0xa32 <__floatunsisf+0xe0>
     a0e:	30 97       	sbiw	r30, 0x00	; 0
     a10:	81 f0       	breq	.+32     	; 0xa32 <__floatunsisf+0xe0>
     a12:	0e 2e       	mov	r0, r30
     a14:	04 c0       	rjmp	.+8      	; 0xa1e <__floatunsisf+0xcc>
     a16:	ee 0c       	add	r14, r14
     a18:	ff 1c       	adc	r15, r15
     a1a:	00 1f       	adc	r16, r16
     a1c:	11 1f       	adc	r17, r17
     a1e:	0a 94       	dec	r0
     a20:	d2 f7       	brpl	.-12     	; 0xa16 <__floatunsisf+0xc4>
     a22:	ed 82       	std	Y+5, r14	; 0x05
     a24:	fe 82       	std	Y+6, r15	; 0x06
     a26:	0f 83       	std	Y+7, r16	; 0x07
     a28:	18 87       	std	Y+8, r17	; 0x08
     a2a:	ce 1a       	sub	r12, r30
     a2c:	df 0a       	sbc	r13, r31
     a2e:	dc 82       	std	Y+4, r13	; 0x04
     a30:	cb 82       	std	Y+3, r12	; 0x03
     a32:	1a 82       	std	Y+2, r1	; 0x02
     a34:	ce 01       	movw	r24, r28
     a36:	01 96       	adiw	r24, 0x01	; 1
     a38:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     a3c:	28 96       	adiw	r28, 0x08	; 8
     a3e:	ea e0       	ldi	r30, 0x0A	; 10
     a40:	0c 94 43 0f 	jmp	0x1e86	; 0x1e86 <__epilogue_restores__+0x10>

00000a44 <__clzsi2>:
     a44:	ef 92       	push	r14
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	7b 01       	movw	r14, r22
     a4e:	8c 01       	movw	r16, r24
     a50:	80 e0       	ldi	r24, 0x00	; 0
     a52:	e8 16       	cp	r14, r24
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	f8 06       	cpc	r15, r24
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	08 07       	cpc	r16, r24
     a5c:	80 e0       	ldi	r24, 0x00	; 0
     a5e:	18 07       	cpc	r17, r24
     a60:	88 f4       	brcc	.+34     	; 0xa84 <__clzsi2+0x40>
     a62:	8f ef       	ldi	r24, 0xFF	; 255
     a64:	e8 16       	cp	r14, r24
     a66:	f1 04       	cpc	r15, r1
     a68:	01 05       	cpc	r16, r1
     a6a:	11 05       	cpc	r17, r1
     a6c:	31 f0       	breq	.+12     	; 0xa7a <__clzsi2+0x36>
     a6e:	28 f0       	brcs	.+10     	; 0xa7a <__clzsi2+0x36>
     a70:	88 e0       	ldi	r24, 0x08	; 8
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	a0 e0       	ldi	r26, 0x00	; 0
     a76:	b0 e0       	ldi	r27, 0x00	; 0
     a78:	17 c0       	rjmp	.+46     	; 0xaa8 <__clzsi2+0x64>
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	a0 e0       	ldi	r26, 0x00	; 0
     a80:	b0 e0       	ldi	r27, 0x00	; 0
     a82:	12 c0       	rjmp	.+36     	; 0xaa8 <__clzsi2+0x64>
     a84:	80 e0       	ldi	r24, 0x00	; 0
     a86:	e8 16       	cp	r14, r24
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	f8 06       	cpc	r15, r24
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	08 07       	cpc	r16, r24
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	18 07       	cpc	r17, r24
     a94:	28 f0       	brcs	.+10     	; 0xaa0 <__clzsi2+0x5c>
     a96:	88 e1       	ldi	r24, 0x18	; 24
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__clzsi2+0x64>
     aa0:	80 e1       	ldi	r24, 0x10	; 16
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	a0 e0       	ldi	r26, 0x00	; 0
     aa6:	b0 e0       	ldi	r27, 0x00	; 0
     aa8:	20 e2       	ldi	r18, 0x20	; 32
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	40 e0       	ldi	r20, 0x00	; 0
     aae:	50 e0       	ldi	r21, 0x00	; 0
     ab0:	28 1b       	sub	r18, r24
     ab2:	39 0b       	sbc	r19, r25
     ab4:	4a 0b       	sbc	r20, r26
     ab6:	5b 0b       	sbc	r21, r27
     ab8:	04 c0       	rjmp	.+8      	; 0xac2 <__clzsi2+0x7e>
     aba:	16 95       	lsr	r17
     abc:	07 95       	ror	r16
     abe:	f7 94       	ror	r15
     ac0:	e7 94       	ror	r14
     ac2:	8a 95       	dec	r24
     ac4:	d2 f7       	brpl	.-12     	; 0xaba <__clzsi2+0x76>
     ac6:	f7 01       	movw	r30, r14
     ac8:	e8 59       	subi	r30, 0x98	; 152
     aca:	ff 4f       	sbci	r31, 0xFF	; 255
     acc:	80 81       	ld	r24, Z
     ace:	28 1b       	sub	r18, r24
     ad0:	31 09       	sbc	r19, r1
     ad2:	41 09       	sbc	r20, r1
     ad4:	51 09       	sbc	r21, r1
     ad6:	c9 01       	movw	r24, r18
     ad8:	1f 91       	pop	r17
     ada:	0f 91       	pop	r16
     adc:	ff 90       	pop	r15
     ade:	ef 90       	pop	r14
     ae0:	08 95       	ret

00000ae2 <__pack_f>:
     ae2:	df 92       	push	r13
     ae4:	ef 92       	push	r14
     ae6:	ff 92       	push	r15
     ae8:	0f 93       	push	r16
     aea:	1f 93       	push	r17
     aec:	fc 01       	movw	r30, r24
     aee:	e4 80       	ldd	r14, Z+4	; 0x04
     af0:	f5 80       	ldd	r15, Z+5	; 0x05
     af2:	06 81       	ldd	r16, Z+6	; 0x06
     af4:	17 81       	ldd	r17, Z+7	; 0x07
     af6:	d1 80       	ldd	r13, Z+1	; 0x01
     af8:	80 81       	ld	r24, Z
     afa:	82 30       	cpi	r24, 0x02	; 2
     afc:	48 f4       	brcc	.+18     	; 0xb10 <__pack_f+0x2e>
     afe:	80 e0       	ldi	r24, 0x00	; 0
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	a0 e1       	ldi	r26, 0x10	; 16
     b04:	b0 e0       	ldi	r27, 0x00	; 0
     b06:	e8 2a       	or	r14, r24
     b08:	f9 2a       	or	r15, r25
     b0a:	0a 2b       	or	r16, r26
     b0c:	1b 2b       	or	r17, r27
     b0e:	a5 c0       	rjmp	.+330    	; 0xc5a <__pack_f+0x178>
     b10:	84 30       	cpi	r24, 0x04	; 4
     b12:	09 f4       	brne	.+2      	; 0xb16 <__pack_f+0x34>
     b14:	9f c0       	rjmp	.+318    	; 0xc54 <__pack_f+0x172>
     b16:	82 30       	cpi	r24, 0x02	; 2
     b18:	21 f4       	brne	.+8      	; 0xb22 <__pack_f+0x40>
     b1a:	ee 24       	eor	r14, r14
     b1c:	ff 24       	eor	r15, r15
     b1e:	87 01       	movw	r16, r14
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <__pack_f+0x4a>
     b22:	e1 14       	cp	r14, r1
     b24:	f1 04       	cpc	r15, r1
     b26:	01 05       	cpc	r16, r1
     b28:	11 05       	cpc	r17, r1
     b2a:	19 f4       	brne	.+6      	; 0xb32 <__pack_f+0x50>
     b2c:	e0 e0       	ldi	r30, 0x00	; 0
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	96 c0       	rjmp	.+300    	; 0xc5e <__pack_f+0x17c>
     b32:	62 81       	ldd	r22, Z+2	; 0x02
     b34:	73 81       	ldd	r23, Z+3	; 0x03
     b36:	9f ef       	ldi	r25, 0xFF	; 255
     b38:	62 38       	cpi	r22, 0x82	; 130
     b3a:	79 07       	cpc	r23, r25
     b3c:	0c f0       	brlt	.+2      	; 0xb40 <__pack_f+0x5e>
     b3e:	5b c0       	rjmp	.+182    	; 0xbf6 <__pack_f+0x114>
     b40:	22 e8       	ldi	r18, 0x82	; 130
     b42:	3f ef       	ldi	r19, 0xFF	; 255
     b44:	26 1b       	sub	r18, r22
     b46:	37 0b       	sbc	r19, r23
     b48:	2a 31       	cpi	r18, 0x1A	; 26
     b4a:	31 05       	cpc	r19, r1
     b4c:	2c f0       	brlt	.+10     	; 0xb58 <__pack_f+0x76>
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	40 e0       	ldi	r20, 0x00	; 0
     b54:	50 e0       	ldi	r21, 0x00	; 0
     b56:	2a c0       	rjmp	.+84     	; 0xbac <__pack_f+0xca>
     b58:	b8 01       	movw	r22, r16
     b5a:	a7 01       	movw	r20, r14
     b5c:	02 2e       	mov	r0, r18
     b5e:	04 c0       	rjmp	.+8      	; 0xb68 <__pack_f+0x86>
     b60:	76 95       	lsr	r23
     b62:	67 95       	ror	r22
     b64:	57 95       	ror	r21
     b66:	47 95       	ror	r20
     b68:	0a 94       	dec	r0
     b6a:	d2 f7       	brpl	.-12     	; 0xb60 <__pack_f+0x7e>
     b6c:	81 e0       	ldi	r24, 0x01	; 1
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	a0 e0       	ldi	r26, 0x00	; 0
     b72:	b0 e0       	ldi	r27, 0x00	; 0
     b74:	04 c0       	rjmp	.+8      	; 0xb7e <__pack_f+0x9c>
     b76:	88 0f       	add	r24, r24
     b78:	99 1f       	adc	r25, r25
     b7a:	aa 1f       	adc	r26, r26
     b7c:	bb 1f       	adc	r27, r27
     b7e:	2a 95       	dec	r18
     b80:	d2 f7       	brpl	.-12     	; 0xb76 <__pack_f+0x94>
     b82:	01 97       	sbiw	r24, 0x01	; 1
     b84:	a1 09       	sbc	r26, r1
     b86:	b1 09       	sbc	r27, r1
     b88:	8e 21       	and	r24, r14
     b8a:	9f 21       	and	r25, r15
     b8c:	a0 23       	and	r26, r16
     b8e:	b1 23       	and	r27, r17
     b90:	00 97       	sbiw	r24, 0x00	; 0
     b92:	a1 05       	cpc	r26, r1
     b94:	b1 05       	cpc	r27, r1
     b96:	21 f0       	breq	.+8      	; 0xba0 <__pack_f+0xbe>
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	a0 e0       	ldi	r26, 0x00	; 0
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	9a 01       	movw	r18, r20
     ba2:	ab 01       	movw	r20, r22
     ba4:	28 2b       	or	r18, r24
     ba6:	39 2b       	or	r19, r25
     ba8:	4a 2b       	or	r20, r26
     baa:	5b 2b       	or	r21, r27
     bac:	da 01       	movw	r26, r20
     bae:	c9 01       	movw	r24, r18
     bb0:	8f 77       	andi	r24, 0x7F	; 127
     bb2:	90 70       	andi	r25, 0x00	; 0
     bb4:	a0 70       	andi	r26, 0x00	; 0
     bb6:	b0 70       	andi	r27, 0x00	; 0
     bb8:	80 34       	cpi	r24, 0x40	; 64
     bba:	91 05       	cpc	r25, r1
     bbc:	a1 05       	cpc	r26, r1
     bbe:	b1 05       	cpc	r27, r1
     bc0:	39 f4       	brne	.+14     	; 0xbd0 <__pack_f+0xee>
     bc2:	27 ff       	sbrs	r18, 7
     bc4:	09 c0       	rjmp	.+18     	; 0xbd8 <__pack_f+0xf6>
     bc6:	20 5c       	subi	r18, 0xC0	; 192
     bc8:	3f 4f       	sbci	r19, 0xFF	; 255
     bca:	4f 4f       	sbci	r20, 0xFF	; 255
     bcc:	5f 4f       	sbci	r21, 0xFF	; 255
     bce:	04 c0       	rjmp	.+8      	; 0xbd8 <__pack_f+0xf6>
     bd0:	21 5c       	subi	r18, 0xC1	; 193
     bd2:	3f 4f       	sbci	r19, 0xFF	; 255
     bd4:	4f 4f       	sbci	r20, 0xFF	; 255
     bd6:	5f 4f       	sbci	r21, 0xFF	; 255
     bd8:	e0 e0       	ldi	r30, 0x00	; 0
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	20 30       	cpi	r18, 0x00	; 0
     bde:	a0 e0       	ldi	r26, 0x00	; 0
     be0:	3a 07       	cpc	r19, r26
     be2:	a0 e0       	ldi	r26, 0x00	; 0
     be4:	4a 07       	cpc	r20, r26
     be6:	a0 e4       	ldi	r26, 0x40	; 64
     be8:	5a 07       	cpc	r21, r26
     bea:	10 f0       	brcs	.+4      	; 0xbf0 <__pack_f+0x10e>
     bec:	e1 e0       	ldi	r30, 0x01	; 1
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	79 01       	movw	r14, r18
     bf2:	8a 01       	movw	r16, r20
     bf4:	27 c0       	rjmp	.+78     	; 0xc44 <__pack_f+0x162>
     bf6:	60 38       	cpi	r22, 0x80	; 128
     bf8:	71 05       	cpc	r23, r1
     bfa:	64 f5       	brge	.+88     	; 0xc54 <__pack_f+0x172>
     bfc:	fb 01       	movw	r30, r22
     bfe:	e1 58       	subi	r30, 0x81	; 129
     c00:	ff 4f       	sbci	r31, 0xFF	; 255
     c02:	d8 01       	movw	r26, r16
     c04:	c7 01       	movw	r24, r14
     c06:	8f 77       	andi	r24, 0x7F	; 127
     c08:	90 70       	andi	r25, 0x00	; 0
     c0a:	a0 70       	andi	r26, 0x00	; 0
     c0c:	b0 70       	andi	r27, 0x00	; 0
     c0e:	80 34       	cpi	r24, 0x40	; 64
     c10:	91 05       	cpc	r25, r1
     c12:	a1 05       	cpc	r26, r1
     c14:	b1 05       	cpc	r27, r1
     c16:	39 f4       	brne	.+14     	; 0xc26 <__pack_f+0x144>
     c18:	e7 fe       	sbrs	r14, 7
     c1a:	0d c0       	rjmp	.+26     	; 0xc36 <__pack_f+0x154>
     c1c:	80 e4       	ldi	r24, 0x40	; 64
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	a0 e0       	ldi	r26, 0x00	; 0
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <__pack_f+0x14c>
     c26:	8f e3       	ldi	r24, 0x3F	; 63
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	a0 e0       	ldi	r26, 0x00	; 0
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	e8 0e       	add	r14, r24
     c30:	f9 1e       	adc	r15, r25
     c32:	0a 1f       	adc	r16, r26
     c34:	1b 1f       	adc	r17, r27
     c36:	17 ff       	sbrs	r17, 7
     c38:	05 c0       	rjmp	.+10     	; 0xc44 <__pack_f+0x162>
     c3a:	16 95       	lsr	r17
     c3c:	07 95       	ror	r16
     c3e:	f7 94       	ror	r15
     c40:	e7 94       	ror	r14
     c42:	31 96       	adiw	r30, 0x01	; 1
     c44:	87 e0       	ldi	r24, 0x07	; 7
     c46:	16 95       	lsr	r17
     c48:	07 95       	ror	r16
     c4a:	f7 94       	ror	r15
     c4c:	e7 94       	ror	r14
     c4e:	8a 95       	dec	r24
     c50:	d1 f7       	brne	.-12     	; 0xc46 <__pack_f+0x164>
     c52:	05 c0       	rjmp	.+10     	; 0xc5e <__pack_f+0x17c>
     c54:	ee 24       	eor	r14, r14
     c56:	ff 24       	eor	r15, r15
     c58:	87 01       	movw	r16, r14
     c5a:	ef ef       	ldi	r30, 0xFF	; 255
     c5c:	f0 e0       	ldi	r31, 0x00	; 0
     c5e:	6e 2f       	mov	r22, r30
     c60:	67 95       	ror	r22
     c62:	66 27       	eor	r22, r22
     c64:	67 95       	ror	r22
     c66:	90 2f       	mov	r25, r16
     c68:	9f 77       	andi	r25, 0x7F	; 127
     c6a:	d7 94       	ror	r13
     c6c:	dd 24       	eor	r13, r13
     c6e:	d7 94       	ror	r13
     c70:	8e 2f       	mov	r24, r30
     c72:	86 95       	lsr	r24
     c74:	49 2f       	mov	r20, r25
     c76:	46 2b       	or	r20, r22
     c78:	58 2f       	mov	r21, r24
     c7a:	5d 29       	or	r21, r13
     c7c:	b7 01       	movw	r22, r14
     c7e:	ca 01       	movw	r24, r20
     c80:	1f 91       	pop	r17
     c82:	0f 91       	pop	r16
     c84:	ff 90       	pop	r15
     c86:	ef 90       	pop	r14
     c88:	df 90       	pop	r13
     c8a:	08 95       	ret

00000c8c <__unpack_f>:
     c8c:	fc 01       	movw	r30, r24
     c8e:	db 01       	movw	r26, r22
     c90:	40 81       	ld	r20, Z
     c92:	51 81       	ldd	r21, Z+1	; 0x01
     c94:	22 81       	ldd	r18, Z+2	; 0x02
     c96:	62 2f       	mov	r22, r18
     c98:	6f 77       	andi	r22, 0x7F	; 127
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	22 1f       	adc	r18, r18
     c9e:	22 27       	eor	r18, r18
     ca0:	22 1f       	adc	r18, r18
     ca2:	93 81       	ldd	r25, Z+3	; 0x03
     ca4:	89 2f       	mov	r24, r25
     ca6:	88 0f       	add	r24, r24
     ca8:	82 2b       	or	r24, r18
     caa:	28 2f       	mov	r18, r24
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	99 1f       	adc	r25, r25
     cb0:	99 27       	eor	r25, r25
     cb2:	99 1f       	adc	r25, r25
     cb4:	11 96       	adiw	r26, 0x01	; 1
     cb6:	9c 93       	st	X, r25
     cb8:	11 97       	sbiw	r26, 0x01	; 1
     cba:	21 15       	cp	r18, r1
     cbc:	31 05       	cpc	r19, r1
     cbe:	a9 f5       	brne	.+106    	; 0xd2a <__unpack_f+0x9e>
     cc0:	41 15       	cp	r20, r1
     cc2:	51 05       	cpc	r21, r1
     cc4:	61 05       	cpc	r22, r1
     cc6:	71 05       	cpc	r23, r1
     cc8:	11 f4       	brne	.+4      	; 0xcce <__unpack_f+0x42>
     cca:	82 e0       	ldi	r24, 0x02	; 2
     ccc:	37 c0       	rjmp	.+110    	; 0xd3c <__unpack_f+0xb0>
     cce:	82 e8       	ldi	r24, 0x82	; 130
     cd0:	9f ef       	ldi	r25, 0xFF	; 255
     cd2:	13 96       	adiw	r26, 0x03	; 3
     cd4:	9c 93       	st	X, r25
     cd6:	8e 93       	st	-X, r24
     cd8:	12 97       	sbiw	r26, 0x02	; 2
     cda:	9a 01       	movw	r18, r20
     cdc:	ab 01       	movw	r20, r22
     cde:	67 e0       	ldi	r22, 0x07	; 7
     ce0:	22 0f       	add	r18, r18
     ce2:	33 1f       	adc	r19, r19
     ce4:	44 1f       	adc	r20, r20
     ce6:	55 1f       	adc	r21, r21
     ce8:	6a 95       	dec	r22
     cea:	d1 f7       	brne	.-12     	; 0xce0 <__unpack_f+0x54>
     cec:	83 e0       	ldi	r24, 0x03	; 3
     cee:	8c 93       	st	X, r24
     cf0:	0d c0       	rjmp	.+26     	; 0xd0c <__unpack_f+0x80>
     cf2:	22 0f       	add	r18, r18
     cf4:	33 1f       	adc	r19, r19
     cf6:	44 1f       	adc	r20, r20
     cf8:	55 1f       	adc	r21, r21
     cfa:	12 96       	adiw	r26, 0x02	; 2
     cfc:	8d 91       	ld	r24, X+
     cfe:	9c 91       	ld	r25, X
     d00:	13 97       	sbiw	r26, 0x03	; 3
     d02:	01 97       	sbiw	r24, 0x01	; 1
     d04:	13 96       	adiw	r26, 0x03	; 3
     d06:	9c 93       	st	X, r25
     d08:	8e 93       	st	-X, r24
     d0a:	12 97       	sbiw	r26, 0x02	; 2
     d0c:	20 30       	cpi	r18, 0x00	; 0
     d0e:	80 e0       	ldi	r24, 0x00	; 0
     d10:	38 07       	cpc	r19, r24
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	48 07       	cpc	r20, r24
     d16:	80 e4       	ldi	r24, 0x40	; 64
     d18:	58 07       	cpc	r21, r24
     d1a:	58 f3       	brcs	.-42     	; 0xcf2 <__unpack_f+0x66>
     d1c:	14 96       	adiw	r26, 0x04	; 4
     d1e:	2d 93       	st	X+, r18
     d20:	3d 93       	st	X+, r19
     d22:	4d 93       	st	X+, r20
     d24:	5c 93       	st	X, r21
     d26:	17 97       	sbiw	r26, 0x07	; 7
     d28:	08 95       	ret
     d2a:	2f 3f       	cpi	r18, 0xFF	; 255
     d2c:	31 05       	cpc	r19, r1
     d2e:	79 f4       	brne	.+30     	; 0xd4e <__unpack_f+0xc2>
     d30:	41 15       	cp	r20, r1
     d32:	51 05       	cpc	r21, r1
     d34:	61 05       	cpc	r22, r1
     d36:	71 05       	cpc	r23, r1
     d38:	19 f4       	brne	.+6      	; 0xd40 <__unpack_f+0xb4>
     d3a:	84 e0       	ldi	r24, 0x04	; 4
     d3c:	8c 93       	st	X, r24
     d3e:	08 95       	ret
     d40:	64 ff       	sbrs	r22, 4
     d42:	03 c0       	rjmp	.+6      	; 0xd4a <__unpack_f+0xbe>
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	8c 93       	st	X, r24
     d48:	12 c0       	rjmp	.+36     	; 0xd6e <__unpack_f+0xe2>
     d4a:	1c 92       	st	X, r1
     d4c:	10 c0       	rjmp	.+32     	; 0xd6e <__unpack_f+0xe2>
     d4e:	2f 57       	subi	r18, 0x7F	; 127
     d50:	30 40       	sbci	r19, 0x00	; 0
     d52:	13 96       	adiw	r26, 0x03	; 3
     d54:	3c 93       	st	X, r19
     d56:	2e 93       	st	-X, r18
     d58:	12 97       	sbiw	r26, 0x02	; 2
     d5a:	83 e0       	ldi	r24, 0x03	; 3
     d5c:	8c 93       	st	X, r24
     d5e:	87 e0       	ldi	r24, 0x07	; 7
     d60:	44 0f       	add	r20, r20
     d62:	55 1f       	adc	r21, r21
     d64:	66 1f       	adc	r22, r22
     d66:	77 1f       	adc	r23, r23
     d68:	8a 95       	dec	r24
     d6a:	d1 f7       	brne	.-12     	; 0xd60 <__unpack_f+0xd4>
     d6c:	70 64       	ori	r23, 0x40	; 64
     d6e:	14 96       	adiw	r26, 0x04	; 4
     d70:	4d 93       	st	X+, r20
     d72:	5d 93       	st	X+, r21
     d74:	6d 93       	st	X+, r22
     d76:	7c 93       	st	X, r23
     d78:	17 97       	sbiw	r26, 0x07	; 7
     d7a:	08 95       	ret

00000d7c <__fpcmp_parts_f>:
     d7c:	1f 93       	push	r17
     d7e:	dc 01       	movw	r26, r24
     d80:	fb 01       	movw	r30, r22
     d82:	9c 91       	ld	r25, X
     d84:	92 30       	cpi	r25, 0x02	; 2
     d86:	08 f4       	brcc	.+2      	; 0xd8a <__fpcmp_parts_f+0xe>
     d88:	47 c0       	rjmp	.+142    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d8a:	80 81       	ld	r24, Z
     d8c:	82 30       	cpi	r24, 0x02	; 2
     d8e:	08 f4       	brcc	.+2      	; 0xd92 <__fpcmp_parts_f+0x16>
     d90:	43 c0       	rjmp	.+134    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d92:	94 30       	cpi	r25, 0x04	; 4
     d94:	51 f4       	brne	.+20     	; 0xdaa <__fpcmp_parts_f+0x2e>
     d96:	11 96       	adiw	r26, 0x01	; 1
     d98:	1c 91       	ld	r17, X
     d9a:	84 30       	cpi	r24, 0x04	; 4
     d9c:	99 f5       	brne	.+102    	; 0xe04 <__fpcmp_parts_f+0x88>
     d9e:	81 81       	ldd	r24, Z+1	; 0x01
     da0:	68 2f       	mov	r22, r24
     da2:	70 e0       	ldi	r23, 0x00	; 0
     da4:	61 1b       	sub	r22, r17
     da6:	71 09       	sbc	r23, r1
     da8:	3f c0       	rjmp	.+126    	; 0xe28 <__fpcmp_parts_f+0xac>
     daa:	84 30       	cpi	r24, 0x04	; 4
     dac:	21 f0       	breq	.+8      	; 0xdb6 <__fpcmp_parts_f+0x3a>
     dae:	92 30       	cpi	r25, 0x02	; 2
     db0:	31 f4       	brne	.+12     	; 0xdbe <__fpcmp_parts_f+0x42>
     db2:	82 30       	cpi	r24, 0x02	; 2
     db4:	b9 f1       	breq	.+110    	; 0xe24 <__fpcmp_parts_f+0xa8>
     db6:	81 81       	ldd	r24, Z+1	; 0x01
     db8:	88 23       	and	r24, r24
     dba:	89 f1       	breq	.+98     	; 0xe1e <__fpcmp_parts_f+0xa2>
     dbc:	2d c0       	rjmp	.+90     	; 0xe18 <__fpcmp_parts_f+0x9c>
     dbe:	11 96       	adiw	r26, 0x01	; 1
     dc0:	1c 91       	ld	r17, X
     dc2:	11 97       	sbiw	r26, 0x01	; 1
     dc4:	82 30       	cpi	r24, 0x02	; 2
     dc6:	f1 f0       	breq	.+60     	; 0xe04 <__fpcmp_parts_f+0x88>
     dc8:	81 81       	ldd	r24, Z+1	; 0x01
     dca:	18 17       	cp	r17, r24
     dcc:	d9 f4       	brne	.+54     	; 0xe04 <__fpcmp_parts_f+0x88>
     dce:	12 96       	adiw	r26, 0x02	; 2
     dd0:	2d 91       	ld	r18, X+
     dd2:	3c 91       	ld	r19, X
     dd4:	13 97       	sbiw	r26, 0x03	; 3
     dd6:	82 81       	ldd	r24, Z+2	; 0x02
     dd8:	93 81       	ldd	r25, Z+3	; 0x03
     dda:	82 17       	cp	r24, r18
     ddc:	93 07       	cpc	r25, r19
     dde:	94 f0       	brlt	.+36     	; 0xe04 <__fpcmp_parts_f+0x88>
     de0:	28 17       	cp	r18, r24
     de2:	39 07       	cpc	r19, r25
     de4:	bc f0       	brlt	.+46     	; 0xe14 <__fpcmp_parts_f+0x98>
     de6:	14 96       	adiw	r26, 0x04	; 4
     de8:	8d 91       	ld	r24, X+
     dea:	9d 91       	ld	r25, X+
     dec:	0d 90       	ld	r0, X+
     dee:	bc 91       	ld	r27, X
     df0:	a0 2d       	mov	r26, r0
     df2:	24 81       	ldd	r18, Z+4	; 0x04
     df4:	35 81       	ldd	r19, Z+5	; 0x05
     df6:	46 81       	ldd	r20, Z+6	; 0x06
     df8:	57 81       	ldd	r21, Z+7	; 0x07
     dfa:	28 17       	cp	r18, r24
     dfc:	39 07       	cpc	r19, r25
     dfe:	4a 07       	cpc	r20, r26
     e00:	5b 07       	cpc	r21, r27
     e02:	18 f4       	brcc	.+6      	; 0xe0a <__fpcmp_parts_f+0x8e>
     e04:	11 23       	and	r17, r17
     e06:	41 f0       	breq	.+16     	; 0xe18 <__fpcmp_parts_f+0x9c>
     e08:	0a c0       	rjmp	.+20     	; 0xe1e <__fpcmp_parts_f+0xa2>
     e0a:	82 17       	cp	r24, r18
     e0c:	93 07       	cpc	r25, r19
     e0e:	a4 07       	cpc	r26, r20
     e10:	b5 07       	cpc	r27, r21
     e12:	40 f4       	brcc	.+16     	; 0xe24 <__fpcmp_parts_f+0xa8>
     e14:	11 23       	and	r17, r17
     e16:	19 f0       	breq	.+6      	; 0xe1e <__fpcmp_parts_f+0xa2>
     e18:	61 e0       	ldi	r22, 0x01	; 1
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	05 c0       	rjmp	.+10     	; 0xe28 <__fpcmp_parts_f+0xac>
     e1e:	6f ef       	ldi	r22, 0xFF	; 255
     e20:	7f ef       	ldi	r23, 0xFF	; 255
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <__fpcmp_parts_f+0xac>
     e24:	60 e0       	ldi	r22, 0x00	; 0
     e26:	70 e0       	ldi	r23, 0x00	; 0
     e28:	cb 01       	movw	r24, r22
     e2a:	1f 91       	pop	r17
     e2c:	08 95       	ret

00000e2e <MTIM1_voidTimer1Init>:
#include "MTIM1_private.h"
#include "MTIM1_interface.h"
#include "MTIM1_config.h"

void MTIM1_voidTimer1Init (void)
{
     e2e:	df 93       	push	r29
     e30:	cf 93       	push	r28
     e32:	cd b7       	in	r28, 0x3d	; 61
     e34:	de b7       	in	r29, 0x3e	; 62
    /* Define Wave Generation Mode */
    TCCR1A |= (u8) MTIM1_WGM & 0b11;
     e36:	af e4       	ldi	r26, 0x4F	; 79
     e38:	b0 e0       	ldi	r27, 0x00	; 0
     e3a:	ef e4       	ldi	r30, 0x4F	; 79
     e3c:	f0 e0       	ldi	r31, 0x00	; 0
     e3e:	80 81       	ld	r24, Z
     e40:	8c 93       	st	X, r24
    TCCR1B |= ((u8) MTIM1_WGM & 0b1100) << 1;
     e42:	ae e4       	ldi	r26, 0x4E	; 78
     e44:	b0 e0       	ldi	r27, 0x00	; 0
     e46:	ee e4       	ldi	r30, 0x4E	; 78
     e48:	f0 e0       	ldi	r31, 0x00	; 0
     e4a:	80 81       	ld	r24, Z
     e4c:	8c 93       	st	X, r24

    /* Define Compare Output Mode */
    TCCR1A |= ((u8)MTIM1_OC1A_COM << COM1A0) | ((u8)MTIM1_OC1B_COM << COM1B0);
     e4e:	af e4       	ldi	r26, 0x4F	; 79
     e50:	b0 e0       	ldi	r27, 0x00	; 0
     e52:	ef e4       	ldi	r30, 0x4F	; 79
     e54:	f0 e0       	ldi	r31, 0x00	; 0
     e56:	80 81       	ld	r24, Z
     e58:	8c 93       	st	X, r24

        SET_BIT(TCCR1A, FOC1A);

    #else

        RESET_BIT(TCCR1A, FOC1A);
     e5a:	af e4       	ldi	r26, 0x4F	; 79
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	ef e4       	ldi	r30, 0x4F	; 79
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	80 81       	ld	r24, Z
     e64:	87 7f       	andi	r24, 0xF7	; 247
     e66:	8c 93       	st	X, r24

        SET_BIT(TCCR1A, FOC1B);

    #else

        RESET_BIT(TCCR1A, FOC1B);
     e68:	af e4       	ldi	r26, 0x4F	; 79
     e6a:	b0 e0       	ldi	r27, 0x00	; 0
     e6c:	ef e4       	ldi	r30, 0x4F	; 79
     e6e:	f0 e0       	ldi	r31, 0x00	; 0
     e70:	80 81       	ld	r24, Z
     e72:	8b 7f       	andi	r24, 0xFB	; 251
     e74:	8c 93       	st	X, r24
    #endif

    /* Configure Input Capture Noise Canceler */
    #if MTIM1_ICNC == ON

        SET_BIT(TCCR1B, ICNC1);
     e76:	ae e4       	ldi	r26, 0x4E	; 78
     e78:	b0 e0       	ldi	r27, 0x00	; 0
     e7a:	ee e4       	ldi	r30, 0x4E	; 78
     e7c:	f0 e0       	ldi	r31, 0x00	; 0
     e7e:	80 81       	ld	r24, Z
     e80:	80 68       	ori	r24, 0x80	; 128
     e82:	8c 93       	st	X, r24
    #endif

    /* Configure Input Capture Edge Select */
    #if MTIM1_IC_TRIGGER == MTIM1_IC_TRIGGER_FALLING

        RESET_BIT(TCCR1B, ICES1);
     e84:	ae e4       	ldi	r26, 0x4E	; 78
     e86:	b0 e0       	ldi	r27, 0x00	; 0
     e88:	ee e4       	ldi	r30, 0x4E	; 78
     e8a:	f0 e0       	ldi	r31, 0x00	; 0
     e8c:	80 81       	ld	r24, Z
     e8e:	8f 7b       	andi	r24, 0xBF	; 191
     e90:	8c 93       	st	X, r24
    #endif

    /* Configure Input Capture Interrupt */
    #if MTIM1_IC_IRQ == ON

        SET_BIT(SREG, GIE);
     e92:	af e5       	ldi	r26, 0x5F	; 95
     e94:	b0 e0       	ldi	r27, 0x00	; 0
     e96:	ef e5       	ldi	r30, 0x5F	; 95
     e98:	f0 e0       	ldi	r31, 0x00	; 0
     e9a:	80 81       	ld	r24, Z
     e9c:	80 68       	ori	r24, 0x80	; 128
     e9e:	8c 93       	st	X, r24
        SET_BIT(TIMSK, TICIE1);
     ea0:	a9 e5       	ldi	r26, 0x59	; 89
     ea2:	b0 e0       	ldi	r27, 0x00	; 0
     ea4:	e9 e5       	ldi	r30, 0x59	; 89
     ea6:	f0 e0       	ldi	r31, 0x00	; 0
     ea8:	80 81       	ld	r24, Z
     eaa:	80 62       	ori	r24, 0x20	; 32
     eac:	8c 93       	st	X, r24
        MDIO_voidSetPinDirection(D,6, INPUT);
     eae:	84 e0       	ldi	r24, 0x04	; 4
     eb0:	66 e0       	ldi	r22, 0x06	; 6
     eb2:	40 e0       	ldi	r20, 0x00	; 0
     eb4:	0e 94 c2 07 	call	0xf84	; 0xf84 <MDIO_voidSetPinDirection>
        SET_BIT(SREG, GIE);
        SET_BIT(TIMSK, OCIE1A);

    #else

        RESET_BIT(TIMSK, OCIE1A);
     eb8:	a9 e5       	ldi	r26, 0x59	; 89
     eba:	b0 e0       	ldi	r27, 0x00	; 0
     ebc:	e9 e5       	ldi	r30, 0x59	; 89
     ebe:	f0 e0       	ldi	r31, 0x00	; 0
     ec0:	80 81       	ld	r24, Z
     ec2:	8f 7e       	andi	r24, 0xEF	; 239
     ec4:	8c 93       	st	X, r24
        SET_BIT(SREG, GIE);
        SET_BIT(TIMSK, OCIE1B);

    #else

        RESET_BIT(TIMSK, OCIE1B);
     ec6:	a9 e5       	ldi	r26, 0x59	; 89
     ec8:	b0 e0       	ldi	r27, 0x00	; 0
     eca:	e9 e5       	ldi	r30, 0x59	; 89
     ecc:	f0 e0       	ldi	r31, 0x00	; 0
     ece:	80 81       	ld	r24, Z
     ed0:	87 7f       	andi	r24, 0xF7	; 247
     ed2:	8c 93       	st	X, r24
    #endif

    /* Configure Output Compare B Match Interrupt */
    #if MTIM1_OVF_IRQ == ON

        SET_BIT(SREG, GIE);
     ed4:	af e5       	ldi	r26, 0x5F	; 95
     ed6:	b0 e0       	ldi	r27, 0x00	; 0
     ed8:	ef e5       	ldi	r30, 0x5F	; 95
     eda:	f0 e0       	ldi	r31, 0x00	; 0
     edc:	80 81       	ld	r24, Z
     ede:	80 68       	ori	r24, 0x80	; 128
     ee0:	8c 93       	st	X, r24
        SET_BIT(TIMSK, TOIE1);
     ee2:	a9 e5       	ldi	r26, 0x59	; 89
     ee4:	b0 e0       	ldi	r27, 0x00	; 0
     ee6:	e9 e5       	ldi	r30, 0x59	; 89
     ee8:	f0 e0       	ldi	r31, 0x00	; 0
     eea:	80 81       	ld	r24, Z
     eec:	84 60       	ori	r24, 0x04	; 4
     eee:	8c 93       	st	X, r24
	{
		MDIO_voidSetPinDirection(D, OC1B, OUTPUT);
	}

	/* Define Clock Source (Start timer) */
	TCCR1B |= MTIM1_CLK_SRC;
     ef0:	ae e4       	ldi	r26, 0x4E	; 78
     ef2:	b0 e0       	ldi	r27, 0x00	; 0
     ef4:	ee e4       	ldi	r30, 0x4E	; 78
     ef6:	f0 e0       	ldi	r31, 0x00	; 0
     ef8:	80 81       	ld	r24, Z
     efa:	83 60       	ori	r24, 0x03	; 3
     efc:	8c 93       	st	X, r24
}
     efe:	cf 91       	pop	r28
     f00:	df 91       	pop	r29
     f02:	08 95       	ret

00000f04 <MTIM1_voidTimer1Deinit>:


void MTIM1_voidTimer1Deinit (void)
{
     f04:	df 93       	push	r29
     f06:	cf 93       	push	r28
     f08:	cd b7       	in	r28, 0x3d	; 61
     f0a:	de b7       	in	r29, 0x3e	; 62
    /* Freeze Clock */
    TCCR1B |= MTIM1_CLK_NONE;
     f0c:	ae e4       	ldi	r26, 0x4E	; 78
     f0e:	b0 e0       	ldi	r27, 0x00	; 0
     f10:	ee e4       	ldi	r30, 0x4E	; 78
     f12:	f0 e0       	ldi	r31, 0x00	; 0
     f14:	80 81       	ld	r24, Z
     f16:	8c 93       	st	X, r24

    /* Reset TCNT1 */
    TCNT1 = 0;
     f18:	ed e4       	ldi	r30, 0x4D	; 77
     f1a:	f0 e0       	ldi	r31, 0x00	; 0
     f1c:	11 82       	std	Z+1, r1	; 0x01
     f1e:	10 82       	st	Z, r1

}
     f20:	cf 91       	pop	r28
     f22:	df 91       	pop	r29
     f24:	08 95       	ret

00000f26 <MTIM1_voidTimer1SetOutputCompareRegister1A>:

void MTIM1_voidTimer1SetOutputCompareRegister1A(u16 value)
{
     f26:	df 93       	push	r29
     f28:	cf 93       	push	r28
     f2a:	00 d0       	rcall	.+0      	; 0xf2c <MTIM1_voidTimer1SetOutputCompareRegister1A+0x6>
     f2c:	cd b7       	in	r28, 0x3d	; 61
     f2e:	de b7       	in	r29, 0x3e	; 62
     f30:	9a 83       	std	Y+2, r25	; 0x02
     f32:	89 83       	std	Y+1, r24	; 0x01
    OCR1A = value;
     f34:	ea e4       	ldi	r30, 0x4A	; 74
     f36:	f0 e0       	ldi	r31, 0x00	; 0
     f38:	89 81       	ldd	r24, Y+1	; 0x01
     f3a:	9a 81       	ldd	r25, Y+2	; 0x02
     f3c:	91 83       	std	Z+1, r25	; 0x01
     f3e:	80 83       	st	Z, r24
}
     f40:	0f 90       	pop	r0
     f42:	0f 90       	pop	r0
     f44:	cf 91       	pop	r28
     f46:	df 91       	pop	r29
     f48:	08 95       	ret

00000f4a <MTIM1_voidTimer1SetOutputCompareRegister1B>:

void MTIM1_voidTimer1SetOutputCompareRegister1B(u16 value)
{
     f4a:	df 93       	push	r29
     f4c:	cf 93       	push	r28
     f4e:	00 d0       	rcall	.+0      	; 0xf50 <MTIM1_voidTimer1SetOutputCompareRegister1B+0x6>
     f50:	cd b7       	in	r28, 0x3d	; 61
     f52:	de b7       	in	r29, 0x3e	; 62
     f54:	9a 83       	std	Y+2, r25	; 0x02
     f56:	89 83       	std	Y+1, r24	; 0x01
    OCR1B = value;
     f58:	eb e4       	ldi	r30, 0x4B	; 75
     f5a:	f0 e0       	ldi	r31, 0x00	; 0
     f5c:	89 81       	ldd	r24, Y+1	; 0x01
     f5e:	9a 81       	ldd	r25, Y+2	; 0x02
     f60:	91 83       	std	Z+1, r25	; 0x01
     f62:	80 83       	st	Z, r24
}
     f64:	0f 90       	pop	r0
     f66:	0f 90       	pop	r0
     f68:	cf 91       	pop	r28
     f6a:	df 91       	pop	r29
     f6c:	08 95       	ret

00000f6e <MTIM1_voidTimer1GetInputCaptureRegister1>:

u16 MTIM1_voidTimer1GetInputCaptureRegister1(void)
{
     f6e:	df 93       	push	r29
     f70:	cf 93       	push	r28
     f72:	cd b7       	in	r28, 0x3d	; 61
     f74:	de b7       	in	r29, 0x3e	; 62
	return ICR1;
     f76:	e6 e4       	ldi	r30, 0x46	; 70
     f78:	f0 e0       	ldi	r31, 0x00	; 0
     f7a:	80 81       	ld	r24, Z
     f7c:	91 81       	ldd	r25, Z+1	; 0x01
}
     f7e:	cf 91       	pop	r28
     f80:	df 91       	pop	r29
     f82:	08 95       	ret

00000f84 <MDIO_voidSetPinDirection>:
#include "MDIO_interface.h"



void MDIO_voidSetPinDirection (u8 port, u8 pin, u8 dir)
{
     f84:	df 93       	push	r29
     f86:	cf 93       	push	r28
     f88:	cd b7       	in	r28, 0x3d	; 61
     f8a:	de b7       	in	r29, 0x3e	; 62
     f8c:	2d 97       	sbiw	r28, 0x0d	; 13
     f8e:	0f b6       	in	r0, 0x3f	; 63
     f90:	f8 94       	cli
     f92:	de bf       	out	0x3e, r29	; 62
     f94:	0f be       	out	0x3f, r0	; 63
     f96:	cd bf       	out	0x3d, r28	; 61
     f98:	89 83       	std	Y+1, r24	; 0x01
     f9a:	6a 83       	std	Y+2, r22	; 0x02
     f9c:	4b 83       	std	Y+3, r20	; 0x03
    switch (port)
     f9e:	89 81       	ldd	r24, Y+1	; 0x01
     fa0:	28 2f       	mov	r18, r24
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	3d 87       	std	Y+13, r19	; 0x0d
     fa6:	2c 87       	std	Y+12, r18	; 0x0c
     fa8:	8c 85       	ldd	r24, Y+12	; 0x0c
     faa:	9d 85       	ldd	r25, Y+13	; 0x0d
     fac:	82 30       	cpi	r24, 0x02	; 2
     fae:	91 05       	cpc	r25, r1
     fb0:	09 f4       	brne	.+2      	; 0xfb4 <MDIO_voidSetPinDirection+0x30>
     fb2:	50 c0       	rjmp	.+160    	; 0x1054 <MDIO_voidSetPinDirection+0xd0>
     fb4:	2c 85       	ldd	r18, Y+12	; 0x0c
     fb6:	3d 85       	ldd	r19, Y+13	; 0x0d
     fb8:	23 30       	cpi	r18, 0x03	; 3
     fba:	31 05       	cpc	r19, r1
     fbc:	34 f4       	brge	.+12     	; 0xfca <MDIO_voidSetPinDirection+0x46>
     fbe:	8c 85       	ldd	r24, Y+12	; 0x0c
     fc0:	9d 85       	ldd	r25, Y+13	; 0x0d
     fc2:	81 30       	cpi	r24, 0x01	; 1
     fc4:	91 05       	cpc	r25, r1
     fc6:	71 f0       	breq	.+28     	; 0xfe4 <MDIO_voidSetPinDirection+0x60>
     fc8:	eb c0       	rjmp	.+470    	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
     fca:	2c 85       	ldd	r18, Y+12	; 0x0c
     fcc:	3d 85       	ldd	r19, Y+13	; 0x0d
     fce:	23 30       	cpi	r18, 0x03	; 3
     fd0:	31 05       	cpc	r19, r1
     fd2:	09 f4       	brne	.+2      	; 0xfd6 <MDIO_voidSetPinDirection+0x52>
     fd4:	77 c0       	rjmp	.+238    	; 0x10c4 <MDIO_voidSetPinDirection+0x140>
     fd6:	8c 85       	ldd	r24, Y+12	; 0x0c
     fd8:	9d 85       	ldd	r25, Y+13	; 0x0d
     fda:	84 30       	cpi	r24, 0x04	; 4
     fdc:	91 05       	cpc	r25, r1
     fde:	09 f4       	brne	.+2      	; 0xfe2 <MDIO_voidSetPinDirection+0x5e>
     fe0:	a9 c0       	rjmp	.+338    	; 0x1134 <MDIO_voidSetPinDirection+0x1b0>
     fe2:	de c0       	rjmp	.+444    	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
    {
        case A:
            switch (dir)
     fe4:	8b 81       	ldd	r24, Y+3	; 0x03
     fe6:	28 2f       	mov	r18, r24
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	3b 87       	std	Y+11, r19	; 0x0b
     fec:	2a 87       	std	Y+10, r18	; 0x0a
     fee:	8a 85       	ldd	r24, Y+10	; 0x0a
     ff0:	9b 85       	ldd	r25, Y+11	; 0x0b
     ff2:	00 97       	sbiw	r24, 0x00	; 0
     ff4:	d1 f0       	breq	.+52     	; 0x102a <MDIO_voidSetPinDirection+0xa6>
     ff6:	2a 85       	ldd	r18, Y+10	; 0x0a
     ff8:	3b 85       	ldd	r19, Y+11	; 0x0b
     ffa:	21 30       	cpi	r18, 0x01	; 1
     ffc:	31 05       	cpc	r19, r1
     ffe:	09 f0       	breq	.+2      	; 0x1002 <MDIO_voidSetPinDirection+0x7e>
    1000:	cf c0       	rjmp	.+414    	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
            {
                case OUTPUT:    SET_BIT(DDRA,pin); break;
    1002:	aa e3       	ldi	r26, 0x3A	; 58
    1004:	b0 e0       	ldi	r27, 0x00	; 0
    1006:	ea e3       	ldi	r30, 0x3A	; 58
    1008:	f0 e0       	ldi	r31, 0x00	; 0
    100a:	80 81       	ld	r24, Z
    100c:	48 2f       	mov	r20, r24
    100e:	8a 81       	ldd	r24, Y+2	; 0x02
    1010:	28 2f       	mov	r18, r24
    1012:	30 e0       	ldi	r19, 0x00	; 0
    1014:	81 e0       	ldi	r24, 0x01	; 1
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	02 2e       	mov	r0, r18
    101a:	02 c0       	rjmp	.+4      	; 0x1020 <MDIO_voidSetPinDirection+0x9c>
    101c:	88 0f       	add	r24, r24
    101e:	99 1f       	adc	r25, r25
    1020:	0a 94       	dec	r0
    1022:	e2 f7       	brpl	.-8      	; 0x101c <MDIO_voidSetPinDirection+0x98>
    1024:	84 2b       	or	r24, r20
    1026:	8c 93       	st	X, r24
    1028:	bb c0       	rjmp	.+374    	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
                case INPUT:     RESET_BIT(DDRA,pin); break;
    102a:	aa e3       	ldi	r26, 0x3A	; 58
    102c:	b0 e0       	ldi	r27, 0x00	; 0
    102e:	ea e3       	ldi	r30, 0x3A	; 58
    1030:	f0 e0       	ldi	r31, 0x00	; 0
    1032:	80 81       	ld	r24, Z
    1034:	48 2f       	mov	r20, r24
    1036:	8a 81       	ldd	r24, Y+2	; 0x02
    1038:	28 2f       	mov	r18, r24
    103a:	30 e0       	ldi	r19, 0x00	; 0
    103c:	81 e0       	ldi	r24, 0x01	; 1
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	02 2e       	mov	r0, r18
    1042:	02 c0       	rjmp	.+4      	; 0x1048 <MDIO_voidSetPinDirection+0xc4>
    1044:	88 0f       	add	r24, r24
    1046:	99 1f       	adc	r25, r25
    1048:	0a 94       	dec	r0
    104a:	e2 f7       	brpl	.-8      	; 0x1044 <MDIO_voidSetPinDirection+0xc0>
    104c:	80 95       	com	r24
    104e:	84 23       	and	r24, r20
    1050:	8c 93       	st	X, r24
    1052:	a6 c0       	rjmp	.+332    	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
                default: break;
            }
            break;
        case B:
            switch (dir)
    1054:	8b 81       	ldd	r24, Y+3	; 0x03
    1056:	28 2f       	mov	r18, r24
    1058:	30 e0       	ldi	r19, 0x00	; 0
    105a:	39 87       	std	Y+9, r19	; 0x09
    105c:	28 87       	std	Y+8, r18	; 0x08
    105e:	88 85       	ldd	r24, Y+8	; 0x08
    1060:	99 85       	ldd	r25, Y+9	; 0x09
    1062:	00 97       	sbiw	r24, 0x00	; 0
    1064:	d1 f0       	breq	.+52     	; 0x109a <MDIO_voidSetPinDirection+0x116>
    1066:	28 85       	ldd	r18, Y+8	; 0x08
    1068:	39 85       	ldd	r19, Y+9	; 0x09
    106a:	21 30       	cpi	r18, 0x01	; 1
    106c:	31 05       	cpc	r19, r1
    106e:	09 f0       	breq	.+2      	; 0x1072 <MDIO_voidSetPinDirection+0xee>
    1070:	97 c0       	rjmp	.+302    	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
            {
                case OUTPUT:    SET_BIT(DDRB,pin); break;
    1072:	a7 e3       	ldi	r26, 0x37	; 55
    1074:	b0 e0       	ldi	r27, 0x00	; 0
    1076:	e7 e3       	ldi	r30, 0x37	; 55
    1078:	f0 e0       	ldi	r31, 0x00	; 0
    107a:	80 81       	ld	r24, Z
    107c:	48 2f       	mov	r20, r24
    107e:	8a 81       	ldd	r24, Y+2	; 0x02
    1080:	28 2f       	mov	r18, r24
    1082:	30 e0       	ldi	r19, 0x00	; 0
    1084:	81 e0       	ldi	r24, 0x01	; 1
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	02 2e       	mov	r0, r18
    108a:	02 c0       	rjmp	.+4      	; 0x1090 <MDIO_voidSetPinDirection+0x10c>
    108c:	88 0f       	add	r24, r24
    108e:	99 1f       	adc	r25, r25
    1090:	0a 94       	dec	r0
    1092:	e2 f7       	brpl	.-8      	; 0x108c <MDIO_voidSetPinDirection+0x108>
    1094:	84 2b       	or	r24, r20
    1096:	8c 93       	st	X, r24
    1098:	83 c0       	rjmp	.+262    	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
                case INPUT:     RESET_BIT(DDRB,pin); break;
    109a:	a7 e3       	ldi	r26, 0x37	; 55
    109c:	b0 e0       	ldi	r27, 0x00	; 0
    109e:	e7 e3       	ldi	r30, 0x37	; 55
    10a0:	f0 e0       	ldi	r31, 0x00	; 0
    10a2:	80 81       	ld	r24, Z
    10a4:	48 2f       	mov	r20, r24
    10a6:	8a 81       	ldd	r24, Y+2	; 0x02
    10a8:	28 2f       	mov	r18, r24
    10aa:	30 e0       	ldi	r19, 0x00	; 0
    10ac:	81 e0       	ldi	r24, 0x01	; 1
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	02 2e       	mov	r0, r18
    10b2:	02 c0       	rjmp	.+4      	; 0x10b8 <MDIO_voidSetPinDirection+0x134>
    10b4:	88 0f       	add	r24, r24
    10b6:	99 1f       	adc	r25, r25
    10b8:	0a 94       	dec	r0
    10ba:	e2 f7       	brpl	.-8      	; 0x10b4 <MDIO_voidSetPinDirection+0x130>
    10bc:	80 95       	com	r24
    10be:	84 23       	and	r24, r20
    10c0:	8c 93       	st	X, r24
    10c2:	6e c0       	rjmp	.+220    	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
                default: break;
            }
            break;
        case C:
            switch (dir)
    10c4:	8b 81       	ldd	r24, Y+3	; 0x03
    10c6:	28 2f       	mov	r18, r24
    10c8:	30 e0       	ldi	r19, 0x00	; 0
    10ca:	3f 83       	std	Y+7, r19	; 0x07
    10cc:	2e 83       	std	Y+6, r18	; 0x06
    10ce:	8e 81       	ldd	r24, Y+6	; 0x06
    10d0:	9f 81       	ldd	r25, Y+7	; 0x07
    10d2:	00 97       	sbiw	r24, 0x00	; 0
    10d4:	d1 f0       	breq	.+52     	; 0x110a <MDIO_voidSetPinDirection+0x186>
    10d6:	2e 81       	ldd	r18, Y+6	; 0x06
    10d8:	3f 81       	ldd	r19, Y+7	; 0x07
    10da:	21 30       	cpi	r18, 0x01	; 1
    10dc:	31 05       	cpc	r19, r1
    10de:	09 f0       	breq	.+2      	; 0x10e2 <MDIO_voidSetPinDirection+0x15e>
    10e0:	5f c0       	rjmp	.+190    	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
            {
                case OUTPUT:    SET_BIT(DDRC,pin); break;
    10e2:	a4 e3       	ldi	r26, 0x34	; 52
    10e4:	b0 e0       	ldi	r27, 0x00	; 0
    10e6:	e4 e3       	ldi	r30, 0x34	; 52
    10e8:	f0 e0       	ldi	r31, 0x00	; 0
    10ea:	80 81       	ld	r24, Z
    10ec:	48 2f       	mov	r20, r24
    10ee:	8a 81       	ldd	r24, Y+2	; 0x02
    10f0:	28 2f       	mov	r18, r24
    10f2:	30 e0       	ldi	r19, 0x00	; 0
    10f4:	81 e0       	ldi	r24, 0x01	; 1
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	02 2e       	mov	r0, r18
    10fa:	02 c0       	rjmp	.+4      	; 0x1100 <MDIO_voidSetPinDirection+0x17c>
    10fc:	88 0f       	add	r24, r24
    10fe:	99 1f       	adc	r25, r25
    1100:	0a 94       	dec	r0
    1102:	e2 f7       	brpl	.-8      	; 0x10fc <MDIO_voidSetPinDirection+0x178>
    1104:	84 2b       	or	r24, r20
    1106:	8c 93       	st	X, r24
    1108:	4b c0       	rjmp	.+150    	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
                case INPUT:     RESET_BIT(DDRC,pin); break;
    110a:	a4 e3       	ldi	r26, 0x34	; 52
    110c:	b0 e0       	ldi	r27, 0x00	; 0
    110e:	e4 e3       	ldi	r30, 0x34	; 52
    1110:	f0 e0       	ldi	r31, 0x00	; 0
    1112:	80 81       	ld	r24, Z
    1114:	48 2f       	mov	r20, r24
    1116:	8a 81       	ldd	r24, Y+2	; 0x02
    1118:	28 2f       	mov	r18, r24
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	81 e0       	ldi	r24, 0x01	; 1
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	02 2e       	mov	r0, r18
    1122:	02 c0       	rjmp	.+4      	; 0x1128 <MDIO_voidSetPinDirection+0x1a4>
    1124:	88 0f       	add	r24, r24
    1126:	99 1f       	adc	r25, r25
    1128:	0a 94       	dec	r0
    112a:	e2 f7       	brpl	.-8      	; 0x1124 <MDIO_voidSetPinDirection+0x1a0>
    112c:	80 95       	com	r24
    112e:	84 23       	and	r24, r20
    1130:	8c 93       	st	X, r24
    1132:	36 c0       	rjmp	.+108    	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
                default: break;
            }
            break;
        case D:
            switch (dir)
    1134:	8b 81       	ldd	r24, Y+3	; 0x03
    1136:	28 2f       	mov	r18, r24
    1138:	30 e0       	ldi	r19, 0x00	; 0
    113a:	3d 83       	std	Y+5, r19	; 0x05
    113c:	2c 83       	std	Y+4, r18	; 0x04
    113e:	8c 81       	ldd	r24, Y+4	; 0x04
    1140:	9d 81       	ldd	r25, Y+5	; 0x05
    1142:	00 97       	sbiw	r24, 0x00	; 0
    1144:	c9 f0       	breq	.+50     	; 0x1178 <MDIO_voidSetPinDirection+0x1f4>
    1146:	2c 81       	ldd	r18, Y+4	; 0x04
    1148:	3d 81       	ldd	r19, Y+5	; 0x05
    114a:	21 30       	cpi	r18, 0x01	; 1
    114c:	31 05       	cpc	r19, r1
    114e:	41 f5       	brne	.+80     	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
            {
                case OUTPUT:    SET_BIT(DDRD,pin); break;
    1150:	a1 e3       	ldi	r26, 0x31	; 49
    1152:	b0 e0       	ldi	r27, 0x00	; 0
    1154:	e1 e3       	ldi	r30, 0x31	; 49
    1156:	f0 e0       	ldi	r31, 0x00	; 0
    1158:	80 81       	ld	r24, Z
    115a:	48 2f       	mov	r20, r24
    115c:	8a 81       	ldd	r24, Y+2	; 0x02
    115e:	28 2f       	mov	r18, r24
    1160:	30 e0       	ldi	r19, 0x00	; 0
    1162:	81 e0       	ldi	r24, 0x01	; 1
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	02 2e       	mov	r0, r18
    1168:	02 c0       	rjmp	.+4      	; 0x116e <MDIO_voidSetPinDirection+0x1ea>
    116a:	88 0f       	add	r24, r24
    116c:	99 1f       	adc	r25, r25
    116e:	0a 94       	dec	r0
    1170:	e2 f7       	brpl	.-8      	; 0x116a <MDIO_voidSetPinDirection+0x1e6>
    1172:	84 2b       	or	r24, r20
    1174:	8c 93       	st	X, r24
    1176:	14 c0       	rjmp	.+40     	; 0x11a0 <MDIO_voidSetPinDirection+0x21c>
                case INPUT:     RESET_BIT(DDRD,pin); break;
    1178:	a1 e3       	ldi	r26, 0x31	; 49
    117a:	b0 e0       	ldi	r27, 0x00	; 0
    117c:	e1 e3       	ldi	r30, 0x31	; 49
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	80 81       	ld	r24, Z
    1182:	48 2f       	mov	r20, r24
    1184:	8a 81       	ldd	r24, Y+2	; 0x02
    1186:	28 2f       	mov	r18, r24
    1188:	30 e0       	ldi	r19, 0x00	; 0
    118a:	81 e0       	ldi	r24, 0x01	; 1
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	02 2e       	mov	r0, r18
    1190:	02 c0       	rjmp	.+4      	; 0x1196 <MDIO_voidSetPinDirection+0x212>
    1192:	88 0f       	add	r24, r24
    1194:	99 1f       	adc	r25, r25
    1196:	0a 94       	dec	r0
    1198:	e2 f7       	brpl	.-8      	; 0x1192 <MDIO_voidSetPinDirection+0x20e>
    119a:	80 95       	com	r24
    119c:	84 23       	and	r24, r20
    119e:	8c 93       	st	X, r24
                default: break;
            }
            break;
        default: break;
    }
}
    11a0:	2d 96       	adiw	r28, 0x0d	; 13
    11a2:	0f b6       	in	r0, 0x3f	; 63
    11a4:	f8 94       	cli
    11a6:	de bf       	out	0x3e, r29	; 62
    11a8:	0f be       	out	0x3f, r0	; 63
    11aa:	cd bf       	out	0x3d, r28	; 61
    11ac:	cf 91       	pop	r28
    11ae:	df 91       	pop	r29
    11b0:	08 95       	ret

000011b2 <MDIO_voidSetPinValue>:

void MDIO_voidSetPinValue (u8 port, u8 pin, u8 val)
{
    11b2:	df 93       	push	r29
    11b4:	cf 93       	push	r28
    11b6:	cd b7       	in	r28, 0x3d	; 61
    11b8:	de b7       	in	r29, 0x3e	; 62
    11ba:	2d 97       	sbiw	r28, 0x0d	; 13
    11bc:	0f b6       	in	r0, 0x3f	; 63
    11be:	f8 94       	cli
    11c0:	de bf       	out	0x3e, r29	; 62
    11c2:	0f be       	out	0x3f, r0	; 63
    11c4:	cd bf       	out	0x3d, r28	; 61
    11c6:	89 83       	std	Y+1, r24	; 0x01
    11c8:	6a 83       	std	Y+2, r22	; 0x02
    11ca:	4b 83       	std	Y+3, r20	; 0x03
    switch (port)
    11cc:	89 81       	ldd	r24, Y+1	; 0x01
    11ce:	28 2f       	mov	r18, r24
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	3d 87       	std	Y+13, r19	; 0x0d
    11d4:	2c 87       	std	Y+12, r18	; 0x0c
    11d6:	8c 85       	ldd	r24, Y+12	; 0x0c
    11d8:	9d 85       	ldd	r25, Y+13	; 0x0d
    11da:	82 30       	cpi	r24, 0x02	; 2
    11dc:	91 05       	cpc	r25, r1
    11de:	09 f4       	brne	.+2      	; 0x11e2 <MDIO_voidSetPinValue+0x30>
    11e0:	50 c0       	rjmp	.+160    	; 0x1282 <MDIO_voidSetPinValue+0xd0>
    11e2:	2c 85       	ldd	r18, Y+12	; 0x0c
    11e4:	3d 85       	ldd	r19, Y+13	; 0x0d
    11e6:	23 30       	cpi	r18, 0x03	; 3
    11e8:	31 05       	cpc	r19, r1
    11ea:	34 f4       	brge	.+12     	; 0x11f8 <MDIO_voidSetPinValue+0x46>
    11ec:	8c 85       	ldd	r24, Y+12	; 0x0c
    11ee:	9d 85       	ldd	r25, Y+13	; 0x0d
    11f0:	81 30       	cpi	r24, 0x01	; 1
    11f2:	91 05       	cpc	r25, r1
    11f4:	71 f0       	breq	.+28     	; 0x1212 <MDIO_voidSetPinValue+0x60>
    11f6:	eb c0       	rjmp	.+470    	; 0x13ce <MDIO_voidSetPinValue+0x21c>
    11f8:	2c 85       	ldd	r18, Y+12	; 0x0c
    11fa:	3d 85       	ldd	r19, Y+13	; 0x0d
    11fc:	23 30       	cpi	r18, 0x03	; 3
    11fe:	31 05       	cpc	r19, r1
    1200:	09 f4       	brne	.+2      	; 0x1204 <MDIO_voidSetPinValue+0x52>
    1202:	77 c0       	rjmp	.+238    	; 0x12f2 <MDIO_voidSetPinValue+0x140>
    1204:	8c 85       	ldd	r24, Y+12	; 0x0c
    1206:	9d 85       	ldd	r25, Y+13	; 0x0d
    1208:	84 30       	cpi	r24, 0x04	; 4
    120a:	91 05       	cpc	r25, r1
    120c:	09 f4       	brne	.+2      	; 0x1210 <MDIO_voidSetPinValue+0x5e>
    120e:	a9 c0       	rjmp	.+338    	; 0x1362 <MDIO_voidSetPinValue+0x1b0>
    1210:	de c0       	rjmp	.+444    	; 0x13ce <MDIO_voidSetPinValue+0x21c>
    {
        case A:
            switch (val)
    1212:	8b 81       	ldd	r24, Y+3	; 0x03
    1214:	28 2f       	mov	r18, r24
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	3b 87       	std	Y+11, r19	; 0x0b
    121a:	2a 87       	std	Y+10, r18	; 0x0a
    121c:	8a 85       	ldd	r24, Y+10	; 0x0a
    121e:	9b 85       	ldd	r25, Y+11	; 0x0b
    1220:	00 97       	sbiw	r24, 0x00	; 0
    1222:	d1 f0       	breq	.+52     	; 0x1258 <MDIO_voidSetPinValue+0xa6>
    1224:	2a 85       	ldd	r18, Y+10	; 0x0a
    1226:	3b 85       	ldd	r19, Y+11	; 0x0b
    1228:	21 30       	cpi	r18, 0x01	; 1
    122a:	31 05       	cpc	r19, r1
    122c:	09 f0       	breq	.+2      	; 0x1230 <MDIO_voidSetPinValue+0x7e>
    122e:	cf c0       	rjmp	.+414    	; 0x13ce <MDIO_voidSetPinValue+0x21c>
            {
                case HIGH:    SET_BIT(PORTA,pin); break;
    1230:	ab e3       	ldi	r26, 0x3B	; 59
    1232:	b0 e0       	ldi	r27, 0x00	; 0
    1234:	eb e3       	ldi	r30, 0x3B	; 59
    1236:	f0 e0       	ldi	r31, 0x00	; 0
    1238:	80 81       	ld	r24, Z
    123a:	48 2f       	mov	r20, r24
    123c:	8a 81       	ldd	r24, Y+2	; 0x02
    123e:	28 2f       	mov	r18, r24
    1240:	30 e0       	ldi	r19, 0x00	; 0
    1242:	81 e0       	ldi	r24, 0x01	; 1
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	02 2e       	mov	r0, r18
    1248:	02 c0       	rjmp	.+4      	; 0x124e <MDIO_voidSetPinValue+0x9c>
    124a:	88 0f       	add	r24, r24
    124c:	99 1f       	adc	r25, r25
    124e:	0a 94       	dec	r0
    1250:	e2 f7       	brpl	.-8      	; 0x124a <MDIO_voidSetPinValue+0x98>
    1252:	84 2b       	or	r24, r20
    1254:	8c 93       	st	X, r24
    1256:	bb c0       	rjmp	.+374    	; 0x13ce <MDIO_voidSetPinValue+0x21c>
                case LOW:     RESET_BIT(PORTA,pin); break;
    1258:	ab e3       	ldi	r26, 0x3B	; 59
    125a:	b0 e0       	ldi	r27, 0x00	; 0
    125c:	eb e3       	ldi	r30, 0x3B	; 59
    125e:	f0 e0       	ldi	r31, 0x00	; 0
    1260:	80 81       	ld	r24, Z
    1262:	48 2f       	mov	r20, r24
    1264:	8a 81       	ldd	r24, Y+2	; 0x02
    1266:	28 2f       	mov	r18, r24
    1268:	30 e0       	ldi	r19, 0x00	; 0
    126a:	81 e0       	ldi	r24, 0x01	; 1
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	02 2e       	mov	r0, r18
    1270:	02 c0       	rjmp	.+4      	; 0x1276 <MDIO_voidSetPinValue+0xc4>
    1272:	88 0f       	add	r24, r24
    1274:	99 1f       	adc	r25, r25
    1276:	0a 94       	dec	r0
    1278:	e2 f7       	brpl	.-8      	; 0x1272 <MDIO_voidSetPinValue+0xc0>
    127a:	80 95       	com	r24
    127c:	84 23       	and	r24, r20
    127e:	8c 93       	st	X, r24
    1280:	a6 c0       	rjmp	.+332    	; 0x13ce <MDIO_voidSetPinValue+0x21c>
                default: break;
            }
            break;
        case B:
            switch (val)
    1282:	8b 81       	ldd	r24, Y+3	; 0x03
    1284:	28 2f       	mov	r18, r24
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	39 87       	std	Y+9, r19	; 0x09
    128a:	28 87       	std	Y+8, r18	; 0x08
    128c:	88 85       	ldd	r24, Y+8	; 0x08
    128e:	99 85       	ldd	r25, Y+9	; 0x09
    1290:	00 97       	sbiw	r24, 0x00	; 0
    1292:	d1 f0       	breq	.+52     	; 0x12c8 <MDIO_voidSetPinValue+0x116>
    1294:	28 85       	ldd	r18, Y+8	; 0x08
    1296:	39 85       	ldd	r19, Y+9	; 0x09
    1298:	21 30       	cpi	r18, 0x01	; 1
    129a:	31 05       	cpc	r19, r1
    129c:	09 f0       	breq	.+2      	; 0x12a0 <MDIO_voidSetPinValue+0xee>
    129e:	97 c0       	rjmp	.+302    	; 0x13ce <MDIO_voidSetPinValue+0x21c>
            {
                case HIGH:    SET_BIT(PORTB,pin); break;
    12a0:	a8 e3       	ldi	r26, 0x38	; 56
    12a2:	b0 e0       	ldi	r27, 0x00	; 0
    12a4:	e8 e3       	ldi	r30, 0x38	; 56
    12a6:	f0 e0       	ldi	r31, 0x00	; 0
    12a8:	80 81       	ld	r24, Z
    12aa:	48 2f       	mov	r20, r24
    12ac:	8a 81       	ldd	r24, Y+2	; 0x02
    12ae:	28 2f       	mov	r18, r24
    12b0:	30 e0       	ldi	r19, 0x00	; 0
    12b2:	81 e0       	ldi	r24, 0x01	; 1
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	02 2e       	mov	r0, r18
    12b8:	02 c0       	rjmp	.+4      	; 0x12be <MDIO_voidSetPinValue+0x10c>
    12ba:	88 0f       	add	r24, r24
    12bc:	99 1f       	adc	r25, r25
    12be:	0a 94       	dec	r0
    12c0:	e2 f7       	brpl	.-8      	; 0x12ba <MDIO_voidSetPinValue+0x108>
    12c2:	84 2b       	or	r24, r20
    12c4:	8c 93       	st	X, r24
    12c6:	83 c0       	rjmp	.+262    	; 0x13ce <MDIO_voidSetPinValue+0x21c>
                case LOW:     RESET_BIT(PORTB,pin); break;
    12c8:	a8 e3       	ldi	r26, 0x38	; 56
    12ca:	b0 e0       	ldi	r27, 0x00	; 0
    12cc:	e8 e3       	ldi	r30, 0x38	; 56
    12ce:	f0 e0       	ldi	r31, 0x00	; 0
    12d0:	80 81       	ld	r24, Z
    12d2:	48 2f       	mov	r20, r24
    12d4:	8a 81       	ldd	r24, Y+2	; 0x02
    12d6:	28 2f       	mov	r18, r24
    12d8:	30 e0       	ldi	r19, 0x00	; 0
    12da:	81 e0       	ldi	r24, 0x01	; 1
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	02 2e       	mov	r0, r18
    12e0:	02 c0       	rjmp	.+4      	; 0x12e6 <MDIO_voidSetPinValue+0x134>
    12e2:	88 0f       	add	r24, r24
    12e4:	99 1f       	adc	r25, r25
    12e6:	0a 94       	dec	r0
    12e8:	e2 f7       	brpl	.-8      	; 0x12e2 <MDIO_voidSetPinValue+0x130>
    12ea:	80 95       	com	r24
    12ec:	84 23       	and	r24, r20
    12ee:	8c 93       	st	X, r24
    12f0:	6e c0       	rjmp	.+220    	; 0x13ce <MDIO_voidSetPinValue+0x21c>
                default: break;
            }
            break;
        case C:
            switch (val)
    12f2:	8b 81       	ldd	r24, Y+3	; 0x03
    12f4:	28 2f       	mov	r18, r24
    12f6:	30 e0       	ldi	r19, 0x00	; 0
    12f8:	3f 83       	std	Y+7, r19	; 0x07
    12fa:	2e 83       	std	Y+6, r18	; 0x06
    12fc:	8e 81       	ldd	r24, Y+6	; 0x06
    12fe:	9f 81       	ldd	r25, Y+7	; 0x07
    1300:	00 97       	sbiw	r24, 0x00	; 0
    1302:	d1 f0       	breq	.+52     	; 0x1338 <MDIO_voidSetPinValue+0x186>
    1304:	2e 81       	ldd	r18, Y+6	; 0x06
    1306:	3f 81       	ldd	r19, Y+7	; 0x07
    1308:	21 30       	cpi	r18, 0x01	; 1
    130a:	31 05       	cpc	r19, r1
    130c:	09 f0       	breq	.+2      	; 0x1310 <MDIO_voidSetPinValue+0x15e>
    130e:	5f c0       	rjmp	.+190    	; 0x13ce <MDIO_voidSetPinValue+0x21c>
            {
                case HIGH:    SET_BIT(PORTC,pin); break;
    1310:	a5 e3       	ldi	r26, 0x35	; 53
    1312:	b0 e0       	ldi	r27, 0x00	; 0
    1314:	e5 e3       	ldi	r30, 0x35	; 53
    1316:	f0 e0       	ldi	r31, 0x00	; 0
    1318:	80 81       	ld	r24, Z
    131a:	48 2f       	mov	r20, r24
    131c:	8a 81       	ldd	r24, Y+2	; 0x02
    131e:	28 2f       	mov	r18, r24
    1320:	30 e0       	ldi	r19, 0x00	; 0
    1322:	81 e0       	ldi	r24, 0x01	; 1
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	02 2e       	mov	r0, r18
    1328:	02 c0       	rjmp	.+4      	; 0x132e <MDIO_voidSetPinValue+0x17c>
    132a:	88 0f       	add	r24, r24
    132c:	99 1f       	adc	r25, r25
    132e:	0a 94       	dec	r0
    1330:	e2 f7       	brpl	.-8      	; 0x132a <MDIO_voidSetPinValue+0x178>
    1332:	84 2b       	or	r24, r20
    1334:	8c 93       	st	X, r24
    1336:	4b c0       	rjmp	.+150    	; 0x13ce <MDIO_voidSetPinValue+0x21c>
                case LOW:     RESET_BIT(PORTC,pin); break;
    1338:	a5 e3       	ldi	r26, 0x35	; 53
    133a:	b0 e0       	ldi	r27, 0x00	; 0
    133c:	e5 e3       	ldi	r30, 0x35	; 53
    133e:	f0 e0       	ldi	r31, 0x00	; 0
    1340:	80 81       	ld	r24, Z
    1342:	48 2f       	mov	r20, r24
    1344:	8a 81       	ldd	r24, Y+2	; 0x02
    1346:	28 2f       	mov	r18, r24
    1348:	30 e0       	ldi	r19, 0x00	; 0
    134a:	81 e0       	ldi	r24, 0x01	; 1
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	02 2e       	mov	r0, r18
    1350:	02 c0       	rjmp	.+4      	; 0x1356 <MDIO_voidSetPinValue+0x1a4>
    1352:	88 0f       	add	r24, r24
    1354:	99 1f       	adc	r25, r25
    1356:	0a 94       	dec	r0
    1358:	e2 f7       	brpl	.-8      	; 0x1352 <MDIO_voidSetPinValue+0x1a0>
    135a:	80 95       	com	r24
    135c:	84 23       	and	r24, r20
    135e:	8c 93       	st	X, r24
    1360:	36 c0       	rjmp	.+108    	; 0x13ce <MDIO_voidSetPinValue+0x21c>
                default: break;
            }
            break;
        case D:
            switch (val)
    1362:	8b 81       	ldd	r24, Y+3	; 0x03
    1364:	28 2f       	mov	r18, r24
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	3d 83       	std	Y+5, r19	; 0x05
    136a:	2c 83       	std	Y+4, r18	; 0x04
    136c:	8c 81       	ldd	r24, Y+4	; 0x04
    136e:	9d 81       	ldd	r25, Y+5	; 0x05
    1370:	00 97       	sbiw	r24, 0x00	; 0
    1372:	c9 f0       	breq	.+50     	; 0x13a6 <MDIO_voidSetPinValue+0x1f4>
    1374:	2c 81       	ldd	r18, Y+4	; 0x04
    1376:	3d 81       	ldd	r19, Y+5	; 0x05
    1378:	21 30       	cpi	r18, 0x01	; 1
    137a:	31 05       	cpc	r19, r1
    137c:	41 f5       	brne	.+80     	; 0x13ce <MDIO_voidSetPinValue+0x21c>
            {
                case HIGH:    SET_BIT(PORTD,pin); break;
    137e:	a2 e3       	ldi	r26, 0x32	; 50
    1380:	b0 e0       	ldi	r27, 0x00	; 0
    1382:	e2 e3       	ldi	r30, 0x32	; 50
    1384:	f0 e0       	ldi	r31, 0x00	; 0
    1386:	80 81       	ld	r24, Z
    1388:	48 2f       	mov	r20, r24
    138a:	8a 81       	ldd	r24, Y+2	; 0x02
    138c:	28 2f       	mov	r18, r24
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	81 e0       	ldi	r24, 0x01	; 1
    1392:	90 e0       	ldi	r25, 0x00	; 0
    1394:	02 2e       	mov	r0, r18
    1396:	02 c0       	rjmp	.+4      	; 0x139c <MDIO_voidSetPinValue+0x1ea>
    1398:	88 0f       	add	r24, r24
    139a:	99 1f       	adc	r25, r25
    139c:	0a 94       	dec	r0
    139e:	e2 f7       	brpl	.-8      	; 0x1398 <MDIO_voidSetPinValue+0x1e6>
    13a0:	84 2b       	or	r24, r20
    13a2:	8c 93       	st	X, r24
    13a4:	14 c0       	rjmp	.+40     	; 0x13ce <MDIO_voidSetPinValue+0x21c>
                case LOW:     RESET_BIT(PORTD,pin); break;
    13a6:	a2 e3       	ldi	r26, 0x32	; 50
    13a8:	b0 e0       	ldi	r27, 0x00	; 0
    13aa:	e2 e3       	ldi	r30, 0x32	; 50
    13ac:	f0 e0       	ldi	r31, 0x00	; 0
    13ae:	80 81       	ld	r24, Z
    13b0:	48 2f       	mov	r20, r24
    13b2:	8a 81       	ldd	r24, Y+2	; 0x02
    13b4:	28 2f       	mov	r18, r24
    13b6:	30 e0       	ldi	r19, 0x00	; 0
    13b8:	81 e0       	ldi	r24, 0x01	; 1
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	02 2e       	mov	r0, r18
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <MDIO_voidSetPinValue+0x212>
    13c0:	88 0f       	add	r24, r24
    13c2:	99 1f       	adc	r25, r25
    13c4:	0a 94       	dec	r0
    13c6:	e2 f7       	brpl	.-8      	; 0x13c0 <MDIO_voidSetPinValue+0x20e>
    13c8:	80 95       	com	r24
    13ca:	84 23       	and	r24, r20
    13cc:	8c 93       	st	X, r24
                default: break;
            }
            break;
        default: break;
    }
}
    13ce:	2d 96       	adiw	r28, 0x0d	; 13
    13d0:	0f b6       	in	r0, 0x3f	; 63
    13d2:	f8 94       	cli
    13d4:	de bf       	out	0x3e, r29	; 62
    13d6:	0f be       	out	0x3f, r0	; 63
    13d8:	cd bf       	out	0x3d, r28	; 61
    13da:	cf 91       	pop	r28
    13dc:	df 91       	pop	r29
    13de:	08 95       	ret

000013e0 <MDIO_voidSetPortDirection>:

void MDIO_voidSetPortDirection (u8 port, u8 dir)
{
    13e0:	df 93       	push	r29
    13e2:	cf 93       	push	r28
    13e4:	cd b7       	in	r28, 0x3d	; 61
    13e6:	de b7       	in	r29, 0x3e	; 62
    13e8:	2c 97       	sbiw	r28, 0x0c	; 12
    13ea:	0f b6       	in	r0, 0x3f	; 63
    13ec:	f8 94       	cli
    13ee:	de bf       	out	0x3e, r29	; 62
    13f0:	0f be       	out	0x3f, r0	; 63
    13f2:	cd bf       	out	0x3d, r28	; 61
    13f4:	89 83       	std	Y+1, r24	; 0x01
    13f6:	6a 83       	std	Y+2, r22	; 0x02
    switch (port)
    13f8:	89 81       	ldd	r24, Y+1	; 0x01
    13fa:	28 2f       	mov	r18, r24
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	3c 87       	std	Y+12, r19	; 0x0c
    1400:	2b 87       	std	Y+11, r18	; 0x0b
    1402:	8b 85       	ldd	r24, Y+11	; 0x0b
    1404:	9c 85       	ldd	r25, Y+12	; 0x0c
    1406:	82 30       	cpi	r24, 0x02	; 2
    1408:	91 05       	cpc	r25, r1
    140a:	79 f1       	breq	.+94     	; 0x146a <MDIO_voidSetPortDirection+0x8a>
    140c:	2b 85       	ldd	r18, Y+11	; 0x0b
    140e:	3c 85       	ldd	r19, Y+12	; 0x0c
    1410:	23 30       	cpi	r18, 0x03	; 3
    1412:	31 05       	cpc	r19, r1
    1414:	34 f4       	brge	.+12     	; 0x1422 <MDIO_voidSetPortDirection+0x42>
    1416:	8b 85       	ldd	r24, Y+11	; 0x0b
    1418:	9c 85       	ldd	r25, Y+12	; 0x0c
    141a:	81 30       	cpi	r24, 0x01	; 1
    141c:	91 05       	cpc	r25, r1
    141e:	69 f0       	breq	.+26     	; 0x143a <MDIO_voidSetPortDirection+0x5a>
    1420:	68 c0       	rjmp	.+208    	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
    1422:	2b 85       	ldd	r18, Y+11	; 0x0b
    1424:	3c 85       	ldd	r19, Y+12	; 0x0c
    1426:	23 30       	cpi	r18, 0x03	; 3
    1428:	31 05       	cpc	r19, r1
    142a:	b1 f1       	breq	.+108    	; 0x1498 <MDIO_voidSetPortDirection+0xb8>
    142c:	8b 85       	ldd	r24, Y+11	; 0x0b
    142e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1430:	84 30       	cpi	r24, 0x04	; 4
    1432:	91 05       	cpc	r25, r1
    1434:	09 f4       	brne	.+2      	; 0x1438 <MDIO_voidSetPortDirection+0x58>
    1436:	47 c0       	rjmp	.+142    	; 0x14c6 <MDIO_voidSetPortDirection+0xe6>
    1438:	5c c0       	rjmp	.+184    	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
    {
        case A:
            switch (dir)
    143a:	8a 81       	ldd	r24, Y+2	; 0x02
    143c:	28 2f       	mov	r18, r24
    143e:	30 e0       	ldi	r19, 0x00	; 0
    1440:	3a 87       	std	Y+10, r19	; 0x0a
    1442:	29 87       	std	Y+9, r18	; 0x09
    1444:	89 85       	ldd	r24, Y+9	; 0x09
    1446:	9a 85       	ldd	r25, Y+10	; 0x0a
    1448:	00 97       	sbiw	r24, 0x00	; 0
    144a:	59 f0       	breq	.+22     	; 0x1462 <MDIO_voidSetPortDirection+0x82>
    144c:	29 85       	ldd	r18, Y+9	; 0x09
    144e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1450:	21 30       	cpi	r18, 0x01	; 1
    1452:	31 05       	cpc	r19, r1
    1454:	09 f0       	breq	.+2      	; 0x1458 <MDIO_voidSetPortDirection+0x78>
    1456:	4d c0       	rjmp	.+154    	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
            {
                case OUTPUT:    DDRA = 255; break;
    1458:	ea e3       	ldi	r30, 0x3A	; 58
    145a:	f0 e0       	ldi	r31, 0x00	; 0
    145c:	8f ef       	ldi	r24, 0xFF	; 255
    145e:	80 83       	st	Z, r24
    1460:	48 c0       	rjmp	.+144    	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
                case INPUT:     DDRA = 0;   break;
    1462:	ea e3       	ldi	r30, 0x3A	; 58
    1464:	f0 e0       	ldi	r31, 0x00	; 0
    1466:	10 82       	st	Z, r1
    1468:	44 c0       	rjmp	.+136    	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
                default: break;
            }
            break;
        case B:
            switch (dir)
    146a:	8a 81       	ldd	r24, Y+2	; 0x02
    146c:	28 2f       	mov	r18, r24
    146e:	30 e0       	ldi	r19, 0x00	; 0
    1470:	38 87       	std	Y+8, r19	; 0x08
    1472:	2f 83       	std	Y+7, r18	; 0x07
    1474:	8f 81       	ldd	r24, Y+7	; 0x07
    1476:	98 85       	ldd	r25, Y+8	; 0x08
    1478:	00 97       	sbiw	r24, 0x00	; 0
    147a:	51 f0       	breq	.+20     	; 0x1490 <MDIO_voidSetPortDirection+0xb0>
    147c:	2f 81       	ldd	r18, Y+7	; 0x07
    147e:	38 85       	ldd	r19, Y+8	; 0x08
    1480:	21 30       	cpi	r18, 0x01	; 1
    1482:	31 05       	cpc	r19, r1
    1484:	b1 f5       	brne	.+108    	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
            {
                case OUTPUT:    DDRB = 255; break;
    1486:	e7 e3       	ldi	r30, 0x37	; 55
    1488:	f0 e0       	ldi	r31, 0x00	; 0
    148a:	8f ef       	ldi	r24, 0xFF	; 255
    148c:	80 83       	st	Z, r24
    148e:	31 c0       	rjmp	.+98     	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
                case INPUT:     DDRB = 0;   break;
    1490:	e7 e3       	ldi	r30, 0x37	; 55
    1492:	f0 e0       	ldi	r31, 0x00	; 0
    1494:	10 82       	st	Z, r1
    1496:	2d c0       	rjmp	.+90     	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
                default: break;
            }
            break;
        case C:
            switch (dir)
    1498:	8a 81       	ldd	r24, Y+2	; 0x02
    149a:	28 2f       	mov	r18, r24
    149c:	30 e0       	ldi	r19, 0x00	; 0
    149e:	3e 83       	std	Y+6, r19	; 0x06
    14a0:	2d 83       	std	Y+5, r18	; 0x05
    14a2:	8d 81       	ldd	r24, Y+5	; 0x05
    14a4:	9e 81       	ldd	r25, Y+6	; 0x06
    14a6:	00 97       	sbiw	r24, 0x00	; 0
    14a8:	51 f0       	breq	.+20     	; 0x14be <MDIO_voidSetPortDirection+0xde>
    14aa:	2d 81       	ldd	r18, Y+5	; 0x05
    14ac:	3e 81       	ldd	r19, Y+6	; 0x06
    14ae:	21 30       	cpi	r18, 0x01	; 1
    14b0:	31 05       	cpc	r19, r1
    14b2:	f9 f4       	brne	.+62     	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
            {
                case OUTPUT:    DDRC = 255; break;
    14b4:	e4 e3       	ldi	r30, 0x34	; 52
    14b6:	f0 e0       	ldi	r31, 0x00	; 0
    14b8:	8f ef       	ldi	r24, 0xFF	; 255
    14ba:	80 83       	st	Z, r24
    14bc:	1a c0       	rjmp	.+52     	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
                case INPUT:     DDRC = 0;   break;
    14be:	e4 e3       	ldi	r30, 0x34	; 52
    14c0:	f0 e0       	ldi	r31, 0x00	; 0
    14c2:	10 82       	st	Z, r1
    14c4:	16 c0       	rjmp	.+44     	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
                default: break;
            }
            break;
        case D:
            switch (dir)
    14c6:	8a 81       	ldd	r24, Y+2	; 0x02
    14c8:	28 2f       	mov	r18, r24
    14ca:	30 e0       	ldi	r19, 0x00	; 0
    14cc:	3c 83       	std	Y+4, r19	; 0x04
    14ce:	2b 83       	std	Y+3, r18	; 0x03
    14d0:	8b 81       	ldd	r24, Y+3	; 0x03
    14d2:	9c 81       	ldd	r25, Y+4	; 0x04
    14d4:	00 97       	sbiw	r24, 0x00	; 0
    14d6:	51 f0       	breq	.+20     	; 0x14ec <MDIO_voidSetPortDirection+0x10c>
    14d8:	2b 81       	ldd	r18, Y+3	; 0x03
    14da:	3c 81       	ldd	r19, Y+4	; 0x04
    14dc:	21 30       	cpi	r18, 0x01	; 1
    14de:	31 05       	cpc	r19, r1
    14e0:	41 f4       	brne	.+16     	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
            {
                case OUTPUT:    DDRD = 255; break;
    14e2:	e1 e3       	ldi	r30, 0x31	; 49
    14e4:	f0 e0       	ldi	r31, 0x00	; 0
    14e6:	8f ef       	ldi	r24, 0xFF	; 255
    14e8:	80 83       	st	Z, r24
    14ea:	03 c0       	rjmp	.+6      	; 0x14f2 <MDIO_voidSetPortDirection+0x112>
                case INPUT:     DDRD = 0;   break;
    14ec:	e1 e3       	ldi	r30, 0x31	; 49
    14ee:	f0 e0       	ldi	r31, 0x00	; 0
    14f0:	10 82       	st	Z, r1
                default: break;
            }
            break;
        default: break;
    }
}
    14f2:	2c 96       	adiw	r28, 0x0c	; 12
    14f4:	0f b6       	in	r0, 0x3f	; 63
    14f6:	f8 94       	cli
    14f8:	de bf       	out	0x3e, r29	; 62
    14fa:	0f be       	out	0x3f, r0	; 63
    14fc:	cd bf       	out	0x3d, r28	; 61
    14fe:	cf 91       	pop	r28
    1500:	df 91       	pop	r29
    1502:	08 95       	ret

00001504 <MDIO_voidSetPortValue>:

void MDIO_voidSetPortValue (u8 port, u8 val)
{
    1504:	df 93       	push	r29
    1506:	cf 93       	push	r28
    1508:	00 d0       	rcall	.+0      	; 0x150a <MDIO_voidSetPortValue+0x6>
    150a:	00 d0       	rcall	.+0      	; 0x150c <MDIO_voidSetPortValue+0x8>
    150c:	cd b7       	in	r28, 0x3d	; 61
    150e:	de b7       	in	r29, 0x3e	; 62
    1510:	89 83       	std	Y+1, r24	; 0x01
    1512:	6a 83       	std	Y+2, r22	; 0x02
    switch (port)
    1514:	89 81       	ldd	r24, Y+1	; 0x01
    1516:	28 2f       	mov	r18, r24
    1518:	30 e0       	ldi	r19, 0x00	; 0
    151a:	3c 83       	std	Y+4, r19	; 0x04
    151c:	2b 83       	std	Y+3, r18	; 0x03
    151e:	8b 81       	ldd	r24, Y+3	; 0x03
    1520:	9c 81       	ldd	r25, Y+4	; 0x04
    1522:	82 30       	cpi	r24, 0x02	; 2
    1524:	91 05       	cpc	r25, r1
    1526:	d9 f0       	breq	.+54     	; 0x155e <MDIO_voidSetPortValue+0x5a>
    1528:	2b 81       	ldd	r18, Y+3	; 0x03
    152a:	3c 81       	ldd	r19, Y+4	; 0x04
    152c:	23 30       	cpi	r18, 0x03	; 3
    152e:	31 05       	cpc	r19, r1
    1530:	34 f4       	brge	.+12     	; 0x153e <MDIO_voidSetPortValue+0x3a>
    1532:	8b 81       	ldd	r24, Y+3	; 0x03
    1534:	9c 81       	ldd	r25, Y+4	; 0x04
    1536:	81 30       	cpi	r24, 0x01	; 1
    1538:	91 05       	cpc	r25, r1
    153a:	61 f0       	breq	.+24     	; 0x1554 <MDIO_voidSetPortValue+0x50>
    153c:	1e c0       	rjmp	.+60     	; 0x157a <MDIO_voidSetPortValue+0x76>
    153e:	2b 81       	ldd	r18, Y+3	; 0x03
    1540:	3c 81       	ldd	r19, Y+4	; 0x04
    1542:	23 30       	cpi	r18, 0x03	; 3
    1544:	31 05       	cpc	r19, r1
    1546:	81 f0       	breq	.+32     	; 0x1568 <MDIO_voidSetPortValue+0x64>
    1548:	8b 81       	ldd	r24, Y+3	; 0x03
    154a:	9c 81       	ldd	r25, Y+4	; 0x04
    154c:	84 30       	cpi	r24, 0x04	; 4
    154e:	91 05       	cpc	r25, r1
    1550:	81 f0       	breq	.+32     	; 0x1572 <MDIO_voidSetPortValue+0x6e>
    1552:	13 c0       	rjmp	.+38     	; 0x157a <MDIO_voidSetPortValue+0x76>
    {
        case A: PORTA = val; break;
    1554:	eb e3       	ldi	r30, 0x3B	; 59
    1556:	f0 e0       	ldi	r31, 0x00	; 0
    1558:	8a 81       	ldd	r24, Y+2	; 0x02
    155a:	80 83       	st	Z, r24
    155c:	0e c0       	rjmp	.+28     	; 0x157a <MDIO_voidSetPortValue+0x76>

        case B:	PORTB = val; break;
    155e:	e8 e3       	ldi	r30, 0x38	; 56
    1560:	f0 e0       	ldi	r31, 0x00	; 0
    1562:	8a 81       	ldd	r24, Y+2	; 0x02
    1564:	80 83       	st	Z, r24
    1566:	09 c0       	rjmp	.+18     	; 0x157a <MDIO_voidSetPortValue+0x76>
        case C: PORTC = val; break;
    1568:	e5 e3       	ldi	r30, 0x35	; 53
    156a:	f0 e0       	ldi	r31, 0x00	; 0
    156c:	8a 81       	ldd	r24, Y+2	; 0x02
    156e:	80 83       	st	Z, r24
    1570:	04 c0       	rjmp	.+8      	; 0x157a <MDIO_voidSetPortValue+0x76>
        case D:	PORTD = val; break;
    1572:	e2 e3       	ldi	r30, 0x32	; 50
    1574:	f0 e0       	ldi	r31, 0x00	; 0
    1576:	8a 81       	ldd	r24, Y+2	; 0x02
    1578:	80 83       	st	Z, r24

        default: break;
    }
}
    157a:	0f 90       	pop	r0
    157c:	0f 90       	pop	r0
    157e:	0f 90       	pop	r0
    1580:	0f 90       	pop	r0
    1582:	cf 91       	pop	r28
    1584:	df 91       	pop	r29
    1586:	08 95       	ret

00001588 <MDIO_u8GetPinValue>:

u8   MDIO_u8GetPinValue   (u8 port, u8 pin)
{
    1588:	df 93       	push	r29
    158a:	cf 93       	push	r28
    158c:	00 d0       	rcall	.+0      	; 0x158e <MDIO_u8GetPinValue+0x6>
    158e:	00 d0       	rcall	.+0      	; 0x1590 <MDIO_u8GetPinValue+0x8>
    1590:	0f 92       	push	r0
    1592:	cd b7       	in	r28, 0x3d	; 61
    1594:	de b7       	in	r29, 0x3e	; 62
    1596:	89 83       	std	Y+1, r24	; 0x01
    1598:	6a 83       	std	Y+2, r22	; 0x02
    switch (port)
    159a:	89 81       	ldd	r24, Y+1	; 0x01
    159c:	28 2f       	mov	r18, r24
    159e:	30 e0       	ldi	r19, 0x00	; 0
    15a0:	3d 83       	std	Y+5, r19	; 0x05
    15a2:	2c 83       	std	Y+4, r18	; 0x04
    15a4:	8c 81       	ldd	r24, Y+4	; 0x04
    15a6:	9d 81       	ldd	r25, Y+5	; 0x05
    15a8:	82 30       	cpi	r24, 0x02	; 2
    15aa:	91 05       	cpc	r25, r1
    15ac:	d9 f0       	breq	.+54     	; 0x15e4 <MDIO_u8GetPinValue+0x5c>
    15ae:	2c 81       	ldd	r18, Y+4	; 0x04
    15b0:	3d 81       	ldd	r19, Y+5	; 0x05
    15b2:	23 30       	cpi	r18, 0x03	; 3
    15b4:	31 05       	cpc	r19, r1
    15b6:	34 f4       	brge	.+12     	; 0x15c4 <MDIO_u8GetPinValue+0x3c>
    15b8:	8c 81       	ldd	r24, Y+4	; 0x04
    15ba:	9d 81       	ldd	r25, Y+5	; 0x05
    15bc:	81 30       	cpi	r24, 0x01	; 1
    15be:	91 05       	cpc	r25, r1
    15c0:	61 f0       	breq	.+24     	; 0x15da <MDIO_u8GetPinValue+0x52>
    15c2:	1f c0       	rjmp	.+62     	; 0x1602 <MDIO_u8GetPinValue+0x7a>
    15c4:	2c 81       	ldd	r18, Y+4	; 0x04
    15c6:	3d 81       	ldd	r19, Y+5	; 0x05
    15c8:	23 30       	cpi	r18, 0x03	; 3
    15ca:	31 05       	cpc	r19, r1
    15cc:	81 f0       	breq	.+32     	; 0x15ee <MDIO_u8GetPinValue+0x66>
    15ce:	8c 81       	ldd	r24, Y+4	; 0x04
    15d0:	9d 81       	ldd	r25, Y+5	; 0x05
    15d2:	84 30       	cpi	r24, 0x04	; 4
    15d4:	91 05       	cpc	r25, r1
    15d6:	81 f0       	breq	.+32     	; 0x15f8 <MDIO_u8GetPinValue+0x70>
    15d8:	14 c0       	rjmp	.+40     	; 0x1602 <MDIO_u8GetPinValue+0x7a>
    {
        case A: return PINA;
    15da:	e9 e3       	ldi	r30, 0x39	; 57
    15dc:	f0 e0       	ldi	r31, 0x00	; 0
    15de:	90 81       	ld	r25, Z
    15e0:	9b 83       	std	Y+3, r25	; 0x03
    15e2:	10 c0       	rjmp	.+32     	; 0x1604 <MDIO_u8GetPinValue+0x7c>
        case B: return PINB;
    15e4:	e6 e3       	ldi	r30, 0x36	; 54
    15e6:	f0 e0       	ldi	r31, 0x00	; 0
    15e8:	20 81       	ld	r18, Z
    15ea:	2b 83       	std	Y+3, r18	; 0x03
    15ec:	0b c0       	rjmp	.+22     	; 0x1604 <MDIO_u8GetPinValue+0x7c>
        case C: return PINC;
    15ee:	e3 e3       	ldi	r30, 0x33	; 51
    15f0:	f0 e0       	ldi	r31, 0x00	; 0
    15f2:	30 81       	ld	r19, Z
    15f4:	3b 83       	std	Y+3, r19	; 0x03
    15f6:	06 c0       	rjmp	.+12     	; 0x1604 <MDIO_u8GetPinValue+0x7c>
        case D: return PIND;
    15f8:	e0 e3       	ldi	r30, 0x30	; 48
    15fa:	f0 e0       	ldi	r31, 0x00	; 0
    15fc:	80 81       	ld	r24, Z
    15fe:	8b 83       	std	Y+3, r24	; 0x03
    1600:	01 c0       	rjmp	.+2      	; 0x1604 <MDIO_u8GetPinValue+0x7c>
        default: return 0;
    1602:	1b 82       	std	Y+3, r1	; 0x03
    1604:	8b 81       	ldd	r24, Y+3	; 0x03
    }
}
    1606:	0f 90       	pop	r0
    1608:	0f 90       	pop	r0
    160a:	0f 90       	pop	r0
    160c:	0f 90       	pop	r0
    160e:	0f 90       	pop	r0
    1610:	cf 91       	pop	r28
    1612:	df 91       	pop	r29
    1614:	08 95       	ret

00001616 <MADC_voidADCInit>:
    Initialize ADC with initial configs

*/

void MADC_voidADCInit(void)
{
    1616:	df 93       	push	r29
    1618:	cf 93       	push	r28
    161a:	cd b7       	in	r28, 0x3d	; 61
    161c:	de b7       	in	r29, 0x3e	; 62
    /* Initialize Clock Prescaler */
    ADCSRA |= MADC_ADC_CLK;
    161e:	a6 e2       	ldi	r26, 0x26	; 38
    1620:	b0 e0       	ldi	r27, 0x00	; 0
    1622:	e6 e2       	ldi	r30, 0x26	; 38
    1624:	f0 e0       	ldi	r31, 0x00	; 0
    1626:	80 81       	ld	r24, Z
    1628:	8c 93       	st	X, r24

    /* Initialize Voltage Reference */
    ADMUX |= MADC_V_REF << 6;
    162a:	a7 e2       	ldi	r26, 0x27	; 39
    162c:	b0 e0       	ldi	r27, 0x00	; 0
    162e:	e7 e2       	ldi	r30, 0x27	; 39
    1630:	f0 e0       	ldi	r31, 0x00	; 0
    1632:	80 81       	ld	r24, Z
    1634:	80 64       	ori	r24, 0x40	; 64
    1636:	8c 93       	st	X, r24

    /* Configure Left Adjsutment */
    SET_BIT(ADMUX, ADLAR);
    1638:	a7 e2       	ldi	r26, 0x27	; 39
    163a:	b0 e0       	ldi	r27, 0x00	; 0
    163c:	e7 e2       	ldi	r30, 0x27	; 39
    163e:	f0 e0       	ldi	r31, 0x00	; 0
    1640:	80 81       	ld	r24, Z
    1642:	80 62       	ori	r24, 0x20	; 32
    1644:	8c 93       	st	X, r24

    /* Configure auto Trigger */
    SET_BIT(ADCSRA, ADATE);
    1646:	a6 e2       	ldi	r26, 0x26	; 38
    1648:	b0 e0       	ldi	r27, 0x00	; 0
    164a:	e6 e2       	ldi	r30, 0x26	; 38
    164c:	f0 e0       	ldi	r31, 0x00	; 0
    164e:	80 81       	ld	r24, Z
    1650:	80 62       	ori	r24, 0x20	; 32
    1652:	8c 93       	st	X, r24

    /* Configure Interrupt */
//    SET_BIT(ADCSRA, ADIE);

    /* Confugre ADC Trigger Source */
    SFIOR |= MADC_TRIG_MODE << 5;
    1654:	a0 e5       	ldi	r26, 0x50	; 80
    1656:	b0 e0       	ldi	r27, 0x00	; 0
    1658:	e0 e5       	ldi	r30, 0x50	; 80
    165a:	f0 e0       	ldi	r31, 0x00	; 0
    165c:	80 81       	ld	r24, Z
    165e:	8c 93       	st	X, r24

    /* Enable ADC */
    SET_BIT(ADCSRA, ADEN);
    1660:	a6 e2       	ldi	r26, 0x26	; 38
    1662:	b0 e0       	ldi	r27, 0x00	; 0
    1664:	e6 e2       	ldi	r30, 0x26	; 38
    1666:	f0 e0       	ldi	r31, 0x00	; 0
    1668:	80 81       	ld	r24, Z
    166a:	80 68       	ori	r24, 0x80	; 128
    166c:	8c 93       	st	X, r24
}
    166e:	cf 91       	pop	r28
    1670:	df 91       	pop	r29
    1672:	08 95       	ret

00001674 <MADC_voidStartConversion>:
    Enables ADC

*/

void MADC_voidStartConversion (void)
{
    1674:	df 93       	push	r29
    1676:	cf 93       	push	r28
    1678:	cd b7       	in	r28, 0x3d	; 61
    167a:	de b7       	in	r29, 0x3e	; 62
    SET_BIT(ADCSRA, ADSC);
    167c:	a6 e2       	ldi	r26, 0x26	; 38
    167e:	b0 e0       	ldi	r27, 0x00	; 0
    1680:	e6 e2       	ldi	r30, 0x26	; 38
    1682:	f0 e0       	ldi	r31, 0x00	; 0
    1684:	80 81       	ld	r24, Z
    1686:	80 64       	ori	r24, 0x40	; 64
    1688:	8c 93       	st	X, r24
}
    168a:	cf 91       	pop	r28
    168c:	df 91       	pop	r29
    168e:	08 95       	ret

00001690 <MADC_voidStopConversion>:
    Disables ADC

*/

void MADC_voidStopConversion(void)
{
    1690:	df 93       	push	r29
    1692:	cf 93       	push	r28
    1694:	cd b7       	in	r28, 0x3d	; 61
    1696:	de b7       	in	r29, 0x3e	; 62
    RESET_BIT(ADCSRA, ADSC);
    1698:	a6 e2       	ldi	r26, 0x26	; 38
    169a:	b0 e0       	ldi	r27, 0x00	; 0
    169c:	e6 e2       	ldi	r30, 0x26	; 38
    169e:	f0 e0       	ldi	r31, 0x00	; 0
    16a0:	80 81       	ld	r24, Z
    16a2:	8f 7b       	andi	r24, 0xBF	; 191
    16a4:	8c 93       	st	X, r24
}
    16a6:	cf 91       	pop	r28
    16a8:	df 91       	pop	r29
    16aa:	08 95       	ret

000016ac <MADC_u16GetConversion>:
    return conversion Result

*/

u16 MADC_u16GetConversion (u8 channel)
{
    16ac:	df 93       	push	r29
    16ae:	cf 93       	push	r28
    16b0:	0f 92       	push	r0
    16b2:	cd b7       	in	r28, 0x3d	; 61
    16b4:	de b7       	in	r29, 0x3e	; 62
    16b6:	89 83       	std	Y+1, r24	; 0x01
    /* Select Channel */
    ADMUX |= channel;
    16b8:	a7 e2       	ldi	r26, 0x27	; 39
    16ba:	b0 e0       	ldi	r27, 0x00	; 0
    16bc:	e7 e2       	ldi	r30, 0x27	; 39
    16be:	f0 e0       	ldi	r31, 0x00	; 0
    16c0:	90 81       	ld	r25, Z
    16c2:	89 81       	ldd	r24, Y+1	; 0x01
    16c4:	89 2b       	or	r24, r25
    16c6:	8c 93       	st	X, r24
    
    /* Wait Until Conversion Complete */
//    while (!GET_BIT(ADCSRA, ADIF));

    /* Return Result */
    return ADC;
    16c8:	e4 e2       	ldi	r30, 0x24	; 36
    16ca:	f0 e0       	ldi	r31, 0x00	; 0
    16cc:	80 81       	ld	r24, Z
    16ce:	91 81       	ldd	r25, Z+1	; 0x01
}
    16d0:	0f 90       	pop	r0
    16d2:	cf 91       	pop	r28
    16d4:	df 91       	pop	r29
    16d6:	08 95       	ret

000016d8 <HL298N_voidL298NChannelAInit>:
    Initializes pins used for Channel A on the L298N module

*/

void HL298N_voidL298NChannelAInit (u8 *pins, u8 pinNo)
{
    16d8:	df 93       	push	r29
    16da:	cf 93       	push	r28
    16dc:	00 d0       	rcall	.+0      	; 0x16de <HL298N_voidL298NChannelAInit+0x6>
    16de:	00 d0       	rcall	.+0      	; 0x16e0 <HL298N_voidL298NChannelAInit+0x8>
    16e0:	0f 92       	push	r0
    16e2:	cd b7       	in	r28, 0x3d	; 61
    16e4:	de b7       	in	r29, 0x3e	; 62
    16e6:	9c 83       	std	Y+4, r25	; 0x04
    16e8:	8b 83       	std	Y+3, r24	; 0x03
    16ea:	6d 83       	std	Y+5, r22	; 0x05
    /* Initialize pins to output */

    for (int i = 0; i < pinNo; i++)
    16ec:	1a 82       	std	Y+2, r1	; 0x02
    16ee:	19 82       	std	Y+1, r1	; 0x01
    16f0:	12 c0       	rjmp	.+36     	; 0x1716 <HL298N_voidL298NChannelAInit+0x3e>
    {
        MDIO_voidSetPinDirection(HL298N_PORT, pins[i], OUTPUT);
    16f2:	29 81       	ldd	r18, Y+1	; 0x01
    16f4:	3a 81       	ldd	r19, Y+2	; 0x02
    16f6:	8b 81       	ldd	r24, Y+3	; 0x03
    16f8:	9c 81       	ldd	r25, Y+4	; 0x04
    16fa:	fc 01       	movw	r30, r24
    16fc:	e2 0f       	add	r30, r18
    16fe:	f3 1f       	adc	r31, r19
    1700:	90 81       	ld	r25, Z
    1702:	83 e0       	ldi	r24, 0x03	; 3
    1704:	69 2f       	mov	r22, r25
    1706:	41 e0       	ldi	r20, 0x01	; 1
    1708:	0e 94 c2 07 	call	0xf84	; 0xf84 <MDIO_voidSetPinDirection>

void HL298N_voidL298NChannelAInit (u8 *pins, u8 pinNo)
{
    /* Initialize pins to output */

    for (int i = 0; i < pinNo; i++)
    170c:	89 81       	ldd	r24, Y+1	; 0x01
    170e:	9a 81       	ldd	r25, Y+2	; 0x02
    1710:	01 96       	adiw	r24, 0x01	; 1
    1712:	9a 83       	std	Y+2, r25	; 0x02
    1714:	89 83       	std	Y+1, r24	; 0x01
    1716:	8d 81       	ldd	r24, Y+5	; 0x05
    1718:	28 2f       	mov	r18, r24
    171a:	30 e0       	ldi	r19, 0x00	; 0
    171c:	89 81       	ldd	r24, Y+1	; 0x01
    171e:	9a 81       	ldd	r25, Y+2	; 0x02
    1720:	82 17       	cp	r24, r18
    1722:	93 07       	cpc	r25, r19
    1724:	34 f3       	brlt	.-52     	; 0x16f2 <HL298N_voidL298NChannelAInit+0x1a>
        MDIO_voidSetPinDirection(HL298N_PORT, pins[i], OUTPUT);
    }

    /* Initialize timer with initial PWM 0 */

    MTIM1_voidTimer1Init();
    1726:	0e 94 17 07 	call	0xe2e	; 0xe2e <MTIM1_voidTimer1Init>
}
    172a:	0f 90       	pop	r0
    172c:	0f 90       	pop	r0
    172e:	0f 90       	pop	r0
    1730:	0f 90       	pop	r0
    1732:	0f 90       	pop	r0
    1734:	cf 91       	pop	r28
    1736:	df 91       	pop	r29
    1738:	08 95       	ret

0000173a <HL298N_voidRotateClockwise>:
    Actuates the motor Clockwise with given PWM speed

*/

void HL298N_voidRotateClockwise (u8* pins, u8 pinNo, u16 speed)
{
    173a:	df 93       	push	r29
    173c:	cf 93       	push	r28
    173e:	cd b7       	in	r28, 0x3d	; 61
    1740:	de b7       	in	r29, 0x3e	; 62
    1742:	27 97       	sbiw	r28, 0x07	; 7
    1744:	0f b6       	in	r0, 0x3f	; 63
    1746:	f8 94       	cli
    1748:	de bf       	out	0x3e, r29	; 62
    174a:	0f be       	out	0x3f, r0	; 63
    174c:	cd bf       	out	0x3d, r28	; 61
    174e:	9c 83       	std	Y+4, r25	; 0x04
    1750:	8b 83       	std	Y+3, r24	; 0x03
    1752:	6d 83       	std	Y+5, r22	; 0x05
    1754:	5f 83       	std	Y+7, r21	; 0x07
    1756:	4e 83       	std	Y+6, r20	; 0x06
    /* Initialize pins to output */

    for (int i = 0; i < pinNo; i++)
    1758:	1a 82       	std	Y+2, r1	; 0x02
    175a:	19 82       	std	Y+1, r1	; 0x01
    175c:	26 c0       	rjmp	.+76     	; 0x17aa <HL298N_voidRotateClockwise+0x70>
    {
        if (i % 2 == 0)
    175e:	89 81       	ldd	r24, Y+1	; 0x01
    1760:	9a 81       	ldd	r25, Y+2	; 0x02
    1762:	81 70       	andi	r24, 0x01	; 1
    1764:	90 70       	andi	r25, 0x00	; 0
    1766:	00 97       	sbiw	r24, 0x00	; 0
    1768:	71 f4       	brne	.+28     	; 0x1786 <HL298N_voidRotateClockwise+0x4c>
        {
            MDIO_voidSetPinValue(HL298N_PORT, pins[i], HIGH);
    176a:	29 81       	ldd	r18, Y+1	; 0x01
    176c:	3a 81       	ldd	r19, Y+2	; 0x02
    176e:	8b 81       	ldd	r24, Y+3	; 0x03
    1770:	9c 81       	ldd	r25, Y+4	; 0x04
    1772:	fc 01       	movw	r30, r24
    1774:	e2 0f       	add	r30, r18
    1776:	f3 1f       	adc	r31, r19
    1778:	90 81       	ld	r25, Z
    177a:	83 e0       	ldi	r24, 0x03	; 3
    177c:	69 2f       	mov	r22, r25
    177e:	41 e0       	ldi	r20, 0x01	; 1
    1780:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <MDIO_voidSetPinValue>
    1784:	0d c0       	rjmp	.+26     	; 0x17a0 <HL298N_voidRotateClockwise+0x66>
        }
        else
        {
            MDIO_voidSetPinValue(HL298N_PORT, pins[i], LOW);
    1786:	29 81       	ldd	r18, Y+1	; 0x01
    1788:	3a 81       	ldd	r19, Y+2	; 0x02
    178a:	8b 81       	ldd	r24, Y+3	; 0x03
    178c:	9c 81       	ldd	r25, Y+4	; 0x04
    178e:	fc 01       	movw	r30, r24
    1790:	e2 0f       	add	r30, r18
    1792:	f3 1f       	adc	r31, r19
    1794:	90 81       	ld	r25, Z
    1796:	83 e0       	ldi	r24, 0x03	; 3
    1798:	69 2f       	mov	r22, r25
    179a:	40 e0       	ldi	r20, 0x00	; 0
    179c:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <MDIO_voidSetPinValue>

void HL298N_voidRotateClockwise (u8* pins, u8 pinNo, u16 speed)
{
    /* Initialize pins to output */

    for (int i = 0; i < pinNo; i++)
    17a0:	89 81       	ldd	r24, Y+1	; 0x01
    17a2:	9a 81       	ldd	r25, Y+2	; 0x02
    17a4:	01 96       	adiw	r24, 0x01	; 1
    17a6:	9a 83       	std	Y+2, r25	; 0x02
    17a8:	89 83       	std	Y+1, r24	; 0x01
    17aa:	8d 81       	ldd	r24, Y+5	; 0x05
    17ac:	28 2f       	mov	r18, r24
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	89 81       	ldd	r24, Y+1	; 0x01
    17b2:	9a 81       	ldd	r25, Y+2	; 0x02
    17b4:	82 17       	cp	r24, r18
    17b6:	93 07       	cpc	r25, r19
    17b8:	94 f2       	brlt	.-92     	; 0x175e <HL298N_voidRotateClockwise+0x24>
        {
            MDIO_voidSetPinValue(HL298N_PORT, pins[i], LOW);
        }
    }

    MTIM1_voidTimer1SetOutputCompareRegister1A(speed);
    17ba:	8e 81       	ldd	r24, Y+6	; 0x06
    17bc:	9f 81       	ldd	r25, Y+7	; 0x07
    17be:	0e 94 93 07 	call	0xf26	; 0xf26 <MTIM1_voidTimer1SetOutputCompareRegister1A>
}
    17c2:	27 96       	adiw	r28, 0x07	; 7
    17c4:	0f b6       	in	r0, 0x3f	; 63
    17c6:	f8 94       	cli
    17c8:	de bf       	out	0x3e, r29	; 62
    17ca:	0f be       	out	0x3f, r0	; 63
    17cc:	cd bf       	out	0x3d, r28	; 61
    17ce:	cf 91       	pop	r28
    17d0:	df 91       	pop	r29
    17d2:	08 95       	ret

000017d4 <HL298N_voidCounterRotateClockwise>:
    Actuates the motor Counter Clockwise with given PWM Speed

*/

void HL298N_voidCounterRotateClockwise (u8* pins, u8 pinNo, u16 speed)
{
    17d4:	df 93       	push	r29
    17d6:	cf 93       	push	r28
    17d8:	cd b7       	in	r28, 0x3d	; 61
    17da:	de b7       	in	r29, 0x3e	; 62
    17dc:	27 97       	sbiw	r28, 0x07	; 7
    17de:	0f b6       	in	r0, 0x3f	; 63
    17e0:	f8 94       	cli
    17e2:	de bf       	out	0x3e, r29	; 62
    17e4:	0f be       	out	0x3f, r0	; 63
    17e6:	cd bf       	out	0x3d, r28	; 61
    17e8:	9c 83       	std	Y+4, r25	; 0x04
    17ea:	8b 83       	std	Y+3, r24	; 0x03
    17ec:	6d 83       	std	Y+5, r22	; 0x05
    17ee:	5f 83       	std	Y+7, r21	; 0x07
    17f0:	4e 83       	std	Y+6, r20	; 0x06
    /* Initialize pins to output */

    for (int i = 0; i < pinNo; i++)
    17f2:	1a 82       	std	Y+2, r1	; 0x02
    17f4:	19 82       	std	Y+1, r1	; 0x01
    17f6:	26 c0       	rjmp	.+76     	; 0x1844 <HL298N_voidCounterRotateClockwise+0x70>
    {
        if (i % 2 == 0)
    17f8:	89 81       	ldd	r24, Y+1	; 0x01
    17fa:	9a 81       	ldd	r25, Y+2	; 0x02
    17fc:	81 70       	andi	r24, 0x01	; 1
    17fe:	90 70       	andi	r25, 0x00	; 0
    1800:	00 97       	sbiw	r24, 0x00	; 0
    1802:	71 f4       	brne	.+28     	; 0x1820 <HL298N_voidCounterRotateClockwise+0x4c>
        {
            MDIO_voidSetPinValue(HL298N_PORT, pins[i], LOW);
    1804:	29 81       	ldd	r18, Y+1	; 0x01
    1806:	3a 81       	ldd	r19, Y+2	; 0x02
    1808:	8b 81       	ldd	r24, Y+3	; 0x03
    180a:	9c 81       	ldd	r25, Y+4	; 0x04
    180c:	fc 01       	movw	r30, r24
    180e:	e2 0f       	add	r30, r18
    1810:	f3 1f       	adc	r31, r19
    1812:	90 81       	ld	r25, Z
    1814:	83 e0       	ldi	r24, 0x03	; 3
    1816:	69 2f       	mov	r22, r25
    1818:	40 e0       	ldi	r20, 0x00	; 0
    181a:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <MDIO_voidSetPinValue>
    181e:	0d c0       	rjmp	.+26     	; 0x183a <HL298N_voidCounterRotateClockwise+0x66>
        }
        else
        {
            MDIO_voidSetPinValue(HL298N_PORT, pins[i], HIGH);
    1820:	29 81       	ldd	r18, Y+1	; 0x01
    1822:	3a 81       	ldd	r19, Y+2	; 0x02
    1824:	8b 81       	ldd	r24, Y+3	; 0x03
    1826:	9c 81       	ldd	r25, Y+4	; 0x04
    1828:	fc 01       	movw	r30, r24
    182a:	e2 0f       	add	r30, r18
    182c:	f3 1f       	adc	r31, r19
    182e:	90 81       	ld	r25, Z
    1830:	83 e0       	ldi	r24, 0x03	; 3
    1832:	69 2f       	mov	r22, r25
    1834:	41 e0       	ldi	r20, 0x01	; 1
    1836:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <MDIO_voidSetPinValue>

void HL298N_voidCounterRotateClockwise (u8* pins, u8 pinNo, u16 speed)
{
    /* Initialize pins to output */

    for (int i = 0; i < pinNo; i++)
    183a:	89 81       	ldd	r24, Y+1	; 0x01
    183c:	9a 81       	ldd	r25, Y+2	; 0x02
    183e:	01 96       	adiw	r24, 0x01	; 1
    1840:	9a 83       	std	Y+2, r25	; 0x02
    1842:	89 83       	std	Y+1, r24	; 0x01
    1844:	8d 81       	ldd	r24, Y+5	; 0x05
    1846:	28 2f       	mov	r18, r24
    1848:	30 e0       	ldi	r19, 0x00	; 0
    184a:	89 81       	ldd	r24, Y+1	; 0x01
    184c:	9a 81       	ldd	r25, Y+2	; 0x02
    184e:	82 17       	cp	r24, r18
    1850:	93 07       	cpc	r25, r19
    1852:	94 f2       	brlt	.-92     	; 0x17f8 <HL298N_voidCounterRotateClockwise+0x24>
        {
            MDIO_voidSetPinValue(HL298N_PORT, pins[i], HIGH);
        }
    }

    MTIM1_voidTimer1SetOutputCompareRegister1A(speed);
    1854:	8e 81       	ldd	r24, Y+6	; 0x06
    1856:	9f 81       	ldd	r25, Y+7	; 0x07
    1858:	0e 94 93 07 	call	0xf26	; 0xf26 <MTIM1_voidTimer1SetOutputCompareRegister1A>
}
    185c:	27 96       	adiw	r28, 0x07	; 7
    185e:	0f b6       	in	r0, 0x3f	; 63
    1860:	f8 94       	cli
    1862:	de bf       	out	0x3e, r29	; 62
    1864:	0f be       	out	0x3f, r0	; 63
    1866:	cd bf       	out	0x3d, r28	; 61
    1868:	cf 91       	pop	r28
    186a:	df 91       	pop	r29
    186c:	08 95       	ret

0000186e <main>:
volatile f64 t2 = 0;
volatile f64 dt = 0;
volatile f64 tmp = 0;

void main (void)
{
    186e:	df 93       	push	r29
    1870:	cf 93       	push	r28
    1872:	cd b7       	in	r28, 0x3d	; 61
    1874:	de b7       	in	r29, 0x3e	; 62
    1876:	e0 97       	sbiw	r28, 0x30	; 48
    1878:	0f b6       	in	r0, 0x3f	; 63
    187a:	f8 94       	cli
    187c:	de bf       	out	0x3e, r29	; 62
    187e:	0f be       	out	0x3f, r0	; 63
    1880:	cd bf       	out	0x3d, r28	; 61
	MDIO_voidSetPortDirection(C, OUTPUT);
    1882:	83 e0       	ldi	r24, 0x03	; 3
    1884:	61 e0       	ldi	r22, 0x01	; 1
    1886:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <MDIO_voidSetPortDirection>
	MDIO_voidSetPinDirection(D,7,OUTPUT);
    188a:	84 e0       	ldi	r24, 0x04	; 4
    188c:	67 e0       	ldi	r22, 0x07	; 7
    188e:	41 e0       	ldi	r20, 0x01	; 1
    1890:	0e 94 c2 07 	call	0xf84	; 0xf84 <MDIO_voidSetPinDirection>

	MTIM1_voidTimer1Init();
    1894:	0e 94 17 07 	call	0xe2e	; 0xe2e <MTIM1_voidTimer1Init>

	MDIO_voidSetPinDirection(D,6, INPUT);
    1898:	84 e0       	ldi	r24, 0x04	; 4
    189a:	66 e0       	ldi	r22, 0x06	; 6
    189c:	40 e0       	ldi	r20, 0x00	; 0
    189e:	0e 94 c2 07 	call	0xf84	; 0xf84 <MDIO_voidSetPinDirection>
	while(1)
	{
		tmp = dt;
    18a2:	80 91 74 01 	lds	r24, 0x0174
    18a6:	90 91 75 01 	lds	r25, 0x0175
    18aa:	a0 91 76 01 	lds	r26, 0x0176
    18ae:	b0 91 77 01 	lds	r27, 0x0177
    18b2:	80 93 78 01 	sts	0x0178, r24
    18b6:	90 93 79 01 	sts	0x0179, r25
    18ba:	a0 93 7a 01 	sts	0x017A, r26
    18be:	b0 93 7b 01 	sts	0x017B, r27
		if (tmp  < 0)
    18c2:	80 91 78 01 	lds	r24, 0x0178
    18c6:	90 91 79 01 	lds	r25, 0x0179
    18ca:	a0 91 7a 01 	lds	r26, 0x017A
    18ce:	b0 91 7b 01 	lds	r27, 0x017B
    18d2:	bc 01       	movw	r22, r24
    18d4:	cd 01       	movw	r24, r26
    18d6:	20 e0       	ldi	r18, 0x00	; 0
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	40 e0       	ldi	r20, 0x00	; 0
    18dc:	50 e0       	ldi	r21, 0x00	; 0
    18de:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    18e2:	88 23       	and	r24, r24
    18e4:	f4 f2       	brlt	.-68     	; 0x18a2 <main+0x34>
		{
			continue;
		}

		MDIO_voidSetPortValue(C, 255);
    18e6:	83 e0       	ldi	r24, 0x03	; 3
    18e8:	6f ef       	ldi	r22, 0xFF	; 255
    18ea:	0e 94 82 0a 	call	0x1504	; 0x1504 <MDIO_voidSetPortValue>
		_delay_us(0.001*tmp *1e6);
    18ee:	80 91 78 01 	lds	r24, 0x0178
    18f2:	90 91 79 01 	lds	r25, 0x0179
    18f6:	a0 91 7a 01 	lds	r26, 0x017A
    18fa:	b0 91 7b 01 	lds	r27, 0x017B
    18fe:	bc 01       	movw	r22, r24
    1900:	cd 01       	movw	r24, r26
    1902:	2f e6       	ldi	r18, 0x6F	; 111
    1904:	32 e1       	ldi	r19, 0x12	; 18
    1906:	43 e8       	ldi	r20, 0x83	; 131
    1908:	5a e3       	ldi	r21, 0x3A	; 58
    190a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    190e:	dc 01       	movw	r26, r24
    1910:	cb 01       	movw	r24, r22
    1912:	bc 01       	movw	r22, r24
    1914:	cd 01       	movw	r24, r26
    1916:	20 e0       	ldi	r18, 0x00	; 0
    1918:	34 e2       	ldi	r19, 0x24	; 36
    191a:	44 e7       	ldi	r20, 0x74	; 116
    191c:	59 e4       	ldi	r21, 0x49	; 73
    191e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1922:	dc 01       	movw	r26, r24
    1924:	cb 01       	movw	r24, r22
    1926:	8d a7       	std	Y+45, r24	; 0x2d
    1928:	9e a7       	std	Y+46, r25	; 0x2e
    192a:	af a7       	std	Y+47, r26	; 0x2f
    192c:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    192e:	6d a5       	ldd	r22, Y+45	; 0x2d
    1930:	7e a5       	ldd	r23, Y+46	; 0x2e
    1932:	8f a5       	ldd	r24, Y+47	; 0x2f
    1934:	98 a9       	ldd	r25, Y+48	; 0x30
    1936:	2b ea       	ldi	r18, 0xAB	; 171
    1938:	3a ea       	ldi	r19, 0xAA	; 170
    193a:	4a ea       	ldi	r20, 0xAA	; 170
    193c:	50 e4       	ldi	r21, 0x40	; 64
    193e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1942:	dc 01       	movw	r26, r24
    1944:	cb 01       	movw	r24, r22
    1946:	89 a7       	std	Y+41, r24	; 0x29
    1948:	9a a7       	std	Y+42, r25	; 0x2a
    194a:	ab a7       	std	Y+43, r26	; 0x2b
    194c:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    194e:	69 a5       	ldd	r22, Y+41	; 0x29
    1950:	7a a5       	ldd	r23, Y+42	; 0x2a
    1952:	8b a5       	ldd	r24, Y+43	; 0x2b
    1954:	9c a5       	ldd	r25, Y+44	; 0x2c
    1956:	20 e0       	ldi	r18, 0x00	; 0
    1958:	30 e0       	ldi	r19, 0x00	; 0
    195a:	40 e8       	ldi	r20, 0x80	; 128
    195c:	5f e3       	ldi	r21, 0x3F	; 63
    195e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1962:	88 23       	and	r24, r24
    1964:	1c f4       	brge	.+6      	; 0x196c <main+0xfe>
		__ticks = 1;
    1966:	81 e0       	ldi	r24, 0x01	; 1
    1968:	88 a7       	std	Y+40, r24	; 0x28
    196a:	91 c0       	rjmp	.+290    	; 0x1a8e <main+0x220>
	else if (__tmp > 255)
    196c:	69 a5       	ldd	r22, Y+41	; 0x29
    196e:	7a a5       	ldd	r23, Y+42	; 0x2a
    1970:	8b a5       	ldd	r24, Y+43	; 0x2b
    1972:	9c a5       	ldd	r25, Y+44	; 0x2c
    1974:	20 e0       	ldi	r18, 0x00	; 0
    1976:	30 e0       	ldi	r19, 0x00	; 0
    1978:	4f e7       	ldi	r20, 0x7F	; 127
    197a:	53 e4       	ldi	r21, 0x43	; 67
    197c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1980:	18 16       	cp	r1, r24
    1982:	0c f0       	brlt	.+2      	; 0x1986 <main+0x118>
    1984:	7b c0       	rjmp	.+246    	; 0x1a7c <main+0x20e>
	{
		_delay_ms(__us / 1000.0);
    1986:	6d a5       	ldd	r22, Y+45	; 0x2d
    1988:	7e a5       	ldd	r23, Y+46	; 0x2e
    198a:	8f a5       	ldd	r24, Y+47	; 0x2f
    198c:	98 a9       	ldd	r25, Y+48	; 0x30
    198e:	20 e0       	ldi	r18, 0x00	; 0
    1990:	30 e0       	ldi	r19, 0x00	; 0
    1992:	4a e7       	ldi	r20, 0x7A	; 122
    1994:	54 e4       	ldi	r21, 0x44	; 68
    1996:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    199a:	dc 01       	movw	r26, r24
    199c:	cb 01       	movw	r24, r22
    199e:	8c a3       	std	Y+36, r24	; 0x24
    19a0:	9d a3       	std	Y+37, r25	; 0x25
    19a2:	ae a3       	std	Y+38, r26	; 0x26
    19a4:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19a6:	6c a1       	ldd	r22, Y+36	; 0x24
    19a8:	7d a1       	ldd	r23, Y+37	; 0x25
    19aa:	8e a1       	ldd	r24, Y+38	; 0x26
    19ac:	9f a1       	ldd	r25, Y+39	; 0x27
    19ae:	20 e0       	ldi	r18, 0x00	; 0
    19b0:	30 e0       	ldi	r19, 0x00	; 0
    19b2:	4a e7       	ldi	r20, 0x7A	; 122
    19b4:	55 e4       	ldi	r21, 0x45	; 69
    19b6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19ba:	dc 01       	movw	r26, r24
    19bc:	cb 01       	movw	r24, r22
    19be:	88 a3       	std	Y+32, r24	; 0x20
    19c0:	99 a3       	std	Y+33, r25	; 0x21
    19c2:	aa a3       	std	Y+34, r26	; 0x22
    19c4:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    19c6:	68 a1       	ldd	r22, Y+32	; 0x20
    19c8:	79 a1       	ldd	r23, Y+33	; 0x21
    19ca:	8a a1       	ldd	r24, Y+34	; 0x22
    19cc:	9b a1       	ldd	r25, Y+35	; 0x23
    19ce:	20 e0       	ldi	r18, 0x00	; 0
    19d0:	30 e0       	ldi	r19, 0x00	; 0
    19d2:	40 e8       	ldi	r20, 0x80	; 128
    19d4:	5f e3       	ldi	r21, 0x3F	; 63
    19d6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    19da:	88 23       	and	r24, r24
    19dc:	2c f4       	brge	.+10     	; 0x19e8 <main+0x17a>
		__ticks = 1;
    19de:	81 e0       	ldi	r24, 0x01	; 1
    19e0:	90 e0       	ldi	r25, 0x00	; 0
    19e2:	9f 8f       	std	Y+31, r25	; 0x1f
    19e4:	8e 8f       	std	Y+30, r24	; 0x1e
    19e6:	3f c0       	rjmp	.+126    	; 0x1a66 <main+0x1f8>
	else if (__tmp > 65535)
    19e8:	68 a1       	ldd	r22, Y+32	; 0x20
    19ea:	79 a1       	ldd	r23, Y+33	; 0x21
    19ec:	8a a1       	ldd	r24, Y+34	; 0x22
    19ee:	9b a1       	ldd	r25, Y+35	; 0x23
    19f0:	20 e0       	ldi	r18, 0x00	; 0
    19f2:	3f ef       	ldi	r19, 0xFF	; 255
    19f4:	4f e7       	ldi	r20, 0x7F	; 127
    19f6:	57 e4       	ldi	r21, 0x47	; 71
    19f8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    19fc:	18 16       	cp	r1, r24
    19fe:	4c f5       	brge	.+82     	; 0x1a52 <main+0x1e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a00:	6c a1       	ldd	r22, Y+36	; 0x24
    1a02:	7d a1       	ldd	r23, Y+37	; 0x25
    1a04:	8e a1       	ldd	r24, Y+38	; 0x26
    1a06:	9f a1       	ldd	r25, Y+39	; 0x27
    1a08:	20 e0       	ldi	r18, 0x00	; 0
    1a0a:	30 e0       	ldi	r19, 0x00	; 0
    1a0c:	40 e2       	ldi	r20, 0x20	; 32
    1a0e:	51 e4       	ldi	r21, 0x41	; 65
    1a10:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a14:	dc 01       	movw	r26, r24
    1a16:	cb 01       	movw	r24, r22
    1a18:	bc 01       	movw	r22, r24
    1a1a:	cd 01       	movw	r24, r26
    1a1c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a20:	dc 01       	movw	r26, r24
    1a22:	cb 01       	movw	r24, r22
    1a24:	9f 8f       	std	Y+31, r25	; 0x1f
    1a26:	8e 8f       	std	Y+30, r24	; 0x1e
    1a28:	0f c0       	rjmp	.+30     	; 0x1a48 <main+0x1da>
    1a2a:	80 e9       	ldi	r24, 0x90	; 144
    1a2c:	91 e0       	ldi	r25, 0x01	; 1
    1a2e:	9d 8f       	std	Y+29, r25	; 0x1d
    1a30:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1a32:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1a34:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1a36:	01 97       	sbiw	r24, 0x01	; 1
    1a38:	f1 f7       	brne	.-4      	; 0x1a36 <main+0x1c8>
    1a3a:	9d 8f       	std	Y+29, r25	; 0x1d
    1a3c:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a3e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a40:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1a42:	01 97       	sbiw	r24, 0x01	; 1
    1a44:	9f 8f       	std	Y+31, r25	; 0x1f
    1a46:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a48:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a4a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1a4c:	00 97       	sbiw	r24, 0x00	; 0
    1a4e:	69 f7       	brne	.-38     	; 0x1a2a <main+0x1bc>
    1a50:	24 c0       	rjmp	.+72     	; 0x1a9a <main+0x22c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a52:	68 a1       	ldd	r22, Y+32	; 0x20
    1a54:	79 a1       	ldd	r23, Y+33	; 0x21
    1a56:	8a a1       	ldd	r24, Y+34	; 0x22
    1a58:	9b a1       	ldd	r25, Y+35	; 0x23
    1a5a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a5e:	dc 01       	movw	r26, r24
    1a60:	cb 01       	movw	r24, r22
    1a62:	9f 8f       	std	Y+31, r25	; 0x1f
    1a64:	8e 8f       	std	Y+30, r24	; 0x1e
    1a66:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a68:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1a6a:	9b 8f       	std	Y+27, r25	; 0x1b
    1a6c:	8a 8f       	std	Y+26, r24	; 0x1a
    1a6e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1a70:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1a72:	01 97       	sbiw	r24, 0x01	; 1
    1a74:	f1 f7       	brne	.-4      	; 0x1a72 <main+0x204>
    1a76:	9b 8f       	std	Y+27, r25	; 0x1b
    1a78:	8a 8f       	std	Y+26, r24	; 0x1a
    1a7a:	0f c0       	rjmp	.+30     	; 0x1a9a <main+0x22c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1a7c:	69 a5       	ldd	r22, Y+41	; 0x29
    1a7e:	7a a5       	ldd	r23, Y+42	; 0x2a
    1a80:	8b a5       	ldd	r24, Y+43	; 0x2b
    1a82:	9c a5       	ldd	r25, Y+44	; 0x2c
    1a84:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a88:	dc 01       	movw	r26, r24
    1a8a:	cb 01       	movw	r24, r22
    1a8c:	88 a7       	std	Y+40, r24	; 0x28
    1a8e:	88 a5       	ldd	r24, Y+40	; 0x28
    1a90:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1a92:	89 8d       	ldd	r24, Y+25	; 0x19
    1a94:	8a 95       	dec	r24
    1a96:	f1 f7       	brne	.-4      	; 0x1a94 <main+0x226>
    1a98:	89 8f       	std	Y+25, r24	; 0x19

		MDIO_voidSetPortValue(C, 0);
    1a9a:	83 e0       	ldi	r24, 0x03	; 3
    1a9c:	60 e0       	ldi	r22, 0x00	; 0
    1a9e:	0e 94 82 0a 	call	0x1504	; 0x1504 <MDIO_voidSetPortValue>
		tmp  -= 0.001*tmp;
    1aa2:	80 91 78 01 	lds	r24, 0x0178
    1aa6:	90 91 79 01 	lds	r25, 0x0179
    1aaa:	a0 91 7a 01 	lds	r26, 0x017A
    1aae:	b0 91 7b 01 	lds	r27, 0x017B
    1ab2:	bc 01       	movw	r22, r24
    1ab4:	cd 01       	movw	r24, r26
    1ab6:	2f e6       	ldi	r18, 0x6F	; 111
    1ab8:	32 e1       	ldi	r19, 0x12	; 18
    1aba:	43 e8       	ldi	r20, 0x83	; 131
    1abc:	5a eb       	ldi	r21, 0xBA	; 186
    1abe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ac2:	dc 01       	movw	r26, r24
    1ac4:	cb 01       	movw	r24, r22
    1ac6:	20 91 78 01 	lds	r18, 0x0178
    1aca:	30 91 79 01 	lds	r19, 0x0179
    1ace:	40 91 7a 01 	lds	r20, 0x017A
    1ad2:	50 91 7b 01 	lds	r21, 0x017B
    1ad6:	bc 01       	movw	r22, r24
    1ad8:	cd 01       	movw	r24, r26
    1ada:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__addsf3>
    1ade:	dc 01       	movw	r26, r24
    1ae0:	cb 01       	movw	r24, r22
    1ae2:	80 93 78 01 	sts	0x0178, r24
    1ae6:	90 93 79 01 	sts	0x0179, r25
    1aea:	a0 93 7a 01 	sts	0x017A, r26
    1aee:	b0 93 7b 01 	sts	0x017B, r27
		_delay_us (tmp * 1e6);
    1af2:	80 91 78 01 	lds	r24, 0x0178
    1af6:	90 91 79 01 	lds	r25, 0x0179
    1afa:	a0 91 7a 01 	lds	r26, 0x017A
    1afe:	b0 91 7b 01 	lds	r27, 0x017B
    1b02:	bc 01       	movw	r22, r24
    1b04:	cd 01       	movw	r24, r26
    1b06:	20 e0       	ldi	r18, 0x00	; 0
    1b08:	34 e2       	ldi	r19, 0x24	; 36
    1b0a:	44 e7       	ldi	r20, 0x74	; 116
    1b0c:	59 e4       	ldi	r21, 0x49	; 73
    1b0e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b12:	dc 01       	movw	r26, r24
    1b14:	cb 01       	movw	r24, r22
    1b16:	8d 8b       	std	Y+21, r24	; 0x15
    1b18:	9e 8b       	std	Y+22, r25	; 0x16
    1b1a:	af 8b       	std	Y+23, r26	; 0x17
    1b1c:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1b1e:	6d 89       	ldd	r22, Y+21	; 0x15
    1b20:	7e 89       	ldd	r23, Y+22	; 0x16
    1b22:	8f 89       	ldd	r24, Y+23	; 0x17
    1b24:	98 8d       	ldd	r25, Y+24	; 0x18
    1b26:	2b ea       	ldi	r18, 0xAB	; 171
    1b28:	3a ea       	ldi	r19, 0xAA	; 170
    1b2a:	4a ea       	ldi	r20, 0xAA	; 170
    1b2c:	50 e4       	ldi	r21, 0x40	; 64
    1b2e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b32:	dc 01       	movw	r26, r24
    1b34:	cb 01       	movw	r24, r22
    1b36:	89 8b       	std	Y+17, r24	; 0x11
    1b38:	9a 8b       	std	Y+18, r25	; 0x12
    1b3a:	ab 8b       	std	Y+19, r26	; 0x13
    1b3c:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    1b3e:	69 89       	ldd	r22, Y+17	; 0x11
    1b40:	7a 89       	ldd	r23, Y+18	; 0x12
    1b42:	8b 89       	ldd	r24, Y+19	; 0x13
    1b44:	9c 89       	ldd	r25, Y+20	; 0x14
    1b46:	20 e0       	ldi	r18, 0x00	; 0
    1b48:	30 e0       	ldi	r19, 0x00	; 0
    1b4a:	40 e8       	ldi	r20, 0x80	; 128
    1b4c:	5f e3       	ldi	r21, 0x3F	; 63
    1b4e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1b52:	88 23       	and	r24, r24
    1b54:	1c f4       	brge	.+6      	; 0x1b5c <main+0x2ee>
		__ticks = 1;
    1b56:	81 e0       	ldi	r24, 0x01	; 1
    1b58:	88 8b       	std	Y+16, r24	; 0x10
    1b5a:	91 c0       	rjmp	.+290    	; 0x1c7e <main+0x410>
	else if (__tmp > 255)
    1b5c:	69 89       	ldd	r22, Y+17	; 0x11
    1b5e:	7a 89       	ldd	r23, Y+18	; 0x12
    1b60:	8b 89       	ldd	r24, Y+19	; 0x13
    1b62:	9c 89       	ldd	r25, Y+20	; 0x14
    1b64:	20 e0       	ldi	r18, 0x00	; 0
    1b66:	30 e0       	ldi	r19, 0x00	; 0
    1b68:	4f e7       	ldi	r20, 0x7F	; 127
    1b6a:	53 e4       	ldi	r21, 0x43	; 67
    1b6c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1b70:	18 16       	cp	r1, r24
    1b72:	0c f0       	brlt	.+2      	; 0x1b76 <main+0x308>
    1b74:	7b c0       	rjmp	.+246    	; 0x1c6c <main+0x3fe>
	{
		_delay_ms(__us / 1000.0);
    1b76:	6d 89       	ldd	r22, Y+21	; 0x15
    1b78:	7e 89       	ldd	r23, Y+22	; 0x16
    1b7a:	8f 89       	ldd	r24, Y+23	; 0x17
    1b7c:	98 8d       	ldd	r25, Y+24	; 0x18
    1b7e:	20 e0       	ldi	r18, 0x00	; 0
    1b80:	30 e0       	ldi	r19, 0x00	; 0
    1b82:	4a e7       	ldi	r20, 0x7A	; 122
    1b84:	54 e4       	ldi	r21, 0x44	; 68
    1b86:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1b8a:	dc 01       	movw	r26, r24
    1b8c:	cb 01       	movw	r24, r22
    1b8e:	8c 87       	std	Y+12, r24	; 0x0c
    1b90:	9d 87       	std	Y+13, r25	; 0x0d
    1b92:	ae 87       	std	Y+14, r26	; 0x0e
    1b94:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b96:	6c 85       	ldd	r22, Y+12	; 0x0c
    1b98:	7d 85       	ldd	r23, Y+13	; 0x0d
    1b9a:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b9c:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b9e:	20 e0       	ldi	r18, 0x00	; 0
    1ba0:	30 e0       	ldi	r19, 0x00	; 0
    1ba2:	4a e7       	ldi	r20, 0x7A	; 122
    1ba4:	55 e4       	ldi	r21, 0x45	; 69
    1ba6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1baa:	dc 01       	movw	r26, r24
    1bac:	cb 01       	movw	r24, r22
    1bae:	88 87       	std	Y+8, r24	; 0x08
    1bb0:	99 87       	std	Y+9, r25	; 0x09
    1bb2:	aa 87       	std	Y+10, r26	; 0x0a
    1bb4:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    1bb6:	68 85       	ldd	r22, Y+8	; 0x08
    1bb8:	79 85       	ldd	r23, Y+9	; 0x09
    1bba:	8a 85       	ldd	r24, Y+10	; 0x0a
    1bbc:	9b 85       	ldd	r25, Y+11	; 0x0b
    1bbe:	20 e0       	ldi	r18, 0x00	; 0
    1bc0:	30 e0       	ldi	r19, 0x00	; 0
    1bc2:	40 e8       	ldi	r20, 0x80	; 128
    1bc4:	5f e3       	ldi	r21, 0x3F	; 63
    1bc6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1bca:	88 23       	and	r24, r24
    1bcc:	2c f4       	brge	.+10     	; 0x1bd8 <main+0x36a>
		__ticks = 1;
    1bce:	81 e0       	ldi	r24, 0x01	; 1
    1bd0:	90 e0       	ldi	r25, 0x00	; 0
    1bd2:	9f 83       	std	Y+7, r25	; 0x07
    1bd4:	8e 83       	std	Y+6, r24	; 0x06
    1bd6:	3f c0       	rjmp	.+126    	; 0x1c56 <main+0x3e8>
	else if (__tmp > 65535)
    1bd8:	68 85       	ldd	r22, Y+8	; 0x08
    1bda:	79 85       	ldd	r23, Y+9	; 0x09
    1bdc:	8a 85       	ldd	r24, Y+10	; 0x0a
    1bde:	9b 85       	ldd	r25, Y+11	; 0x0b
    1be0:	20 e0       	ldi	r18, 0x00	; 0
    1be2:	3f ef       	ldi	r19, 0xFF	; 255
    1be4:	4f e7       	ldi	r20, 0x7F	; 127
    1be6:	57 e4       	ldi	r21, 0x47	; 71
    1be8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1bec:	18 16       	cp	r1, r24
    1bee:	4c f5       	brge	.+82     	; 0x1c42 <main+0x3d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bf0:	6c 85       	ldd	r22, Y+12	; 0x0c
    1bf2:	7d 85       	ldd	r23, Y+13	; 0x0d
    1bf4:	8e 85       	ldd	r24, Y+14	; 0x0e
    1bf6:	9f 85       	ldd	r25, Y+15	; 0x0f
    1bf8:	20 e0       	ldi	r18, 0x00	; 0
    1bfa:	30 e0       	ldi	r19, 0x00	; 0
    1bfc:	40 e2       	ldi	r20, 0x20	; 32
    1bfe:	51 e4       	ldi	r21, 0x41	; 65
    1c00:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c04:	dc 01       	movw	r26, r24
    1c06:	cb 01       	movw	r24, r22
    1c08:	bc 01       	movw	r22, r24
    1c0a:	cd 01       	movw	r24, r26
    1c0c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c10:	dc 01       	movw	r26, r24
    1c12:	cb 01       	movw	r24, r22
    1c14:	9f 83       	std	Y+7, r25	; 0x07
    1c16:	8e 83       	std	Y+6, r24	; 0x06
    1c18:	0f c0       	rjmp	.+30     	; 0x1c38 <main+0x3ca>
    1c1a:	80 e9       	ldi	r24, 0x90	; 144
    1c1c:	91 e0       	ldi	r25, 0x01	; 1
    1c1e:	9d 83       	std	Y+5, r25	; 0x05
    1c20:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1c22:	8c 81       	ldd	r24, Y+4	; 0x04
    1c24:	9d 81       	ldd	r25, Y+5	; 0x05
    1c26:	01 97       	sbiw	r24, 0x01	; 1
    1c28:	f1 f7       	brne	.-4      	; 0x1c26 <main+0x3b8>
    1c2a:	9d 83       	std	Y+5, r25	; 0x05
    1c2c:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c2e:	8e 81       	ldd	r24, Y+6	; 0x06
    1c30:	9f 81       	ldd	r25, Y+7	; 0x07
    1c32:	01 97       	sbiw	r24, 0x01	; 1
    1c34:	9f 83       	std	Y+7, r25	; 0x07
    1c36:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c38:	8e 81       	ldd	r24, Y+6	; 0x06
    1c3a:	9f 81       	ldd	r25, Y+7	; 0x07
    1c3c:	00 97       	sbiw	r24, 0x00	; 0
    1c3e:	69 f7       	brne	.-38     	; 0x1c1a <main+0x3ac>
    1c40:	30 ce       	rjmp	.-928    	; 0x18a2 <main+0x34>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c42:	68 85       	ldd	r22, Y+8	; 0x08
    1c44:	79 85       	ldd	r23, Y+9	; 0x09
    1c46:	8a 85       	ldd	r24, Y+10	; 0x0a
    1c48:	9b 85       	ldd	r25, Y+11	; 0x0b
    1c4a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c4e:	dc 01       	movw	r26, r24
    1c50:	cb 01       	movw	r24, r22
    1c52:	9f 83       	std	Y+7, r25	; 0x07
    1c54:	8e 83       	std	Y+6, r24	; 0x06
    1c56:	8e 81       	ldd	r24, Y+6	; 0x06
    1c58:	9f 81       	ldd	r25, Y+7	; 0x07
    1c5a:	9b 83       	std	Y+3, r25	; 0x03
    1c5c:	8a 83       	std	Y+2, r24	; 0x02
    1c5e:	8a 81       	ldd	r24, Y+2	; 0x02
    1c60:	9b 81       	ldd	r25, Y+3	; 0x03
    1c62:	01 97       	sbiw	r24, 0x01	; 1
    1c64:	f1 f7       	brne	.-4      	; 0x1c62 <main+0x3f4>
    1c66:	9b 83       	std	Y+3, r25	; 0x03
    1c68:	8a 83       	std	Y+2, r24	; 0x02
    1c6a:	1b ce       	rjmp	.-970    	; 0x18a2 <main+0x34>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1c6c:	69 89       	ldd	r22, Y+17	; 0x11
    1c6e:	7a 89       	ldd	r23, Y+18	; 0x12
    1c70:	8b 89       	ldd	r24, Y+19	; 0x13
    1c72:	9c 89       	ldd	r25, Y+20	; 0x14
    1c74:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c78:	dc 01       	movw	r26, r24
    1c7a:	cb 01       	movw	r24, r22
    1c7c:	88 8b       	std	Y+16, r24	; 0x10
    1c7e:	88 89       	ldd	r24, Y+16	; 0x10
    1c80:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1c82:	89 81       	ldd	r24, Y+1	; 0x01
    1c84:	8a 95       	dec	r24
    1c86:	f1 f7       	brne	.-4      	; 0x1c84 <main+0x416>
    1c88:	89 83       	std	Y+1, r24	; 0x01
    1c8a:	0b ce       	rjmp	.-1002   	; 0x18a2 <main+0x34>

00001c8c <__vector_6>:

	}
}

ISR(TIMER1_CAPT_vect)
{
    1c8c:	1f 92       	push	r1
    1c8e:	0f 92       	push	r0
    1c90:	0f b6       	in	r0, 0x3f	; 63
    1c92:	0f 92       	push	r0
    1c94:	11 24       	eor	r1, r1
    1c96:	ef 92       	push	r14
    1c98:	ff 92       	push	r15
    1c9a:	0f 93       	push	r16
    1c9c:	1f 93       	push	r17
    1c9e:	2f 93       	push	r18
    1ca0:	3f 93       	push	r19
    1ca2:	4f 93       	push	r20
    1ca4:	5f 93       	push	r21
    1ca6:	6f 93       	push	r22
    1ca8:	7f 93       	push	r23
    1caa:	8f 93       	push	r24
    1cac:	9f 93       	push	r25
    1cae:	af 93       	push	r26
    1cb0:	bf 93       	push	r27
    1cb2:	ef 93       	push	r30
    1cb4:	ff 93       	push	r31
    1cb6:	df 93       	push	r29
    1cb8:	cf 93       	push	r28
    1cba:	cd b7       	in	r28, 0x3d	; 61
    1cbc:	de b7       	in	r29, 0x3e	; 62

	t2 = ((f32)MTIM1_voidTimer1GetInputCaptureRegister1()*(4e-6)) + (ticks * 262.14e-3);		// 1 tick time on clk prescaler 64
    1cbe:	0e 94 b7 07 	call	0xf6e	; 0xf6e <MTIM1_voidTimer1GetInputCaptureRegister1>
    1cc2:	cc 01       	movw	r24, r24
    1cc4:	a0 e0       	ldi	r26, 0x00	; 0
    1cc6:	b0 e0       	ldi	r27, 0x00	; 0
    1cc8:	bc 01       	movw	r22, r24
    1cca:	cd 01       	movw	r24, r26
    1ccc:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    1cd0:	dc 01       	movw	r26, r24
    1cd2:	cb 01       	movw	r24, r22
    1cd4:	bc 01       	movw	r22, r24
    1cd6:	cd 01       	movw	r24, r26
    1cd8:	2d eb       	ldi	r18, 0xBD	; 189
    1cda:	37 e3       	ldi	r19, 0x37	; 55
    1cdc:	46 e8       	ldi	r20, 0x86	; 134
    1cde:	56 e3       	ldi	r21, 0x36	; 54
    1ce0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ce4:	dc 01       	movw	r26, r24
    1ce6:	cb 01       	movw	r24, r22
    1ce8:	7c 01       	movw	r14, r24
    1cea:	8d 01       	movw	r16, r26
    1cec:	80 91 68 01 	lds	r24, 0x0168
    1cf0:	90 91 69 01 	lds	r25, 0x0169
    1cf4:	a0 91 6a 01 	lds	r26, 0x016A
    1cf8:	b0 91 6b 01 	lds	r27, 0x016B
    1cfc:	bc 01       	movw	r22, r24
    1cfe:	cd 01       	movw	r24, r26
    1d00:	27 e3       	ldi	r18, 0x37	; 55
    1d02:	37 e3       	ldi	r19, 0x37	; 55
    1d04:	46 e8       	ldi	r20, 0x86	; 134
    1d06:	5e e3       	ldi	r21, 0x3E	; 62
    1d08:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d0c:	dc 01       	movw	r26, r24
    1d0e:	cb 01       	movw	r24, r22
    1d10:	9c 01       	movw	r18, r24
    1d12:	ad 01       	movw	r20, r26
    1d14:	c8 01       	movw	r24, r16
    1d16:	b7 01       	movw	r22, r14
    1d18:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__addsf3>
    1d1c:	dc 01       	movw	r26, r24
    1d1e:	cb 01       	movw	r24, r22
    1d20:	80 93 70 01 	sts	0x0170, r24
    1d24:	90 93 71 01 	sts	0x0171, r25
    1d28:	a0 93 72 01 	sts	0x0172, r26
    1d2c:	b0 93 73 01 	sts	0x0173, r27
	dt = t2 - t1;
    1d30:	80 91 70 01 	lds	r24, 0x0170
    1d34:	90 91 71 01 	lds	r25, 0x0171
    1d38:	a0 91 72 01 	lds	r26, 0x0172
    1d3c:	b0 91 73 01 	lds	r27, 0x0173
    1d40:	20 91 6c 01 	lds	r18, 0x016C
    1d44:	30 91 6d 01 	lds	r19, 0x016D
    1d48:	40 91 6e 01 	lds	r20, 0x016E
    1d4c:	50 91 6f 01 	lds	r21, 0x016F
    1d50:	bc 01       	movw	r22, r24
    1d52:	cd 01       	movw	r24, r26
    1d54:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
    1d58:	dc 01       	movw	r26, r24
    1d5a:	cb 01       	movw	r24, r22
    1d5c:	80 93 74 01 	sts	0x0174, r24
    1d60:	90 93 75 01 	sts	0x0175, r25
    1d64:	a0 93 76 01 	sts	0x0176, r26
    1d68:	b0 93 77 01 	sts	0x0177, r27
	t1 = t2;
    1d6c:	80 91 70 01 	lds	r24, 0x0170
    1d70:	90 91 71 01 	lds	r25, 0x0171
    1d74:	a0 91 72 01 	lds	r26, 0x0172
    1d78:	b0 91 73 01 	lds	r27, 0x0173
    1d7c:	80 93 6c 01 	sts	0x016C, r24
    1d80:	90 93 6d 01 	sts	0x016D, r25
    1d84:	a0 93 6e 01 	sts	0x016E, r26
    1d88:	b0 93 6f 01 	sts	0x016F, r27



}
    1d8c:	cf 91       	pop	r28
    1d8e:	df 91       	pop	r29
    1d90:	ff 91       	pop	r31
    1d92:	ef 91       	pop	r30
    1d94:	bf 91       	pop	r27
    1d96:	af 91       	pop	r26
    1d98:	9f 91       	pop	r25
    1d9a:	8f 91       	pop	r24
    1d9c:	7f 91       	pop	r23
    1d9e:	6f 91       	pop	r22
    1da0:	5f 91       	pop	r21
    1da2:	4f 91       	pop	r20
    1da4:	3f 91       	pop	r19
    1da6:	2f 91       	pop	r18
    1da8:	1f 91       	pop	r17
    1daa:	0f 91       	pop	r16
    1dac:	ff 90       	pop	r15
    1dae:	ef 90       	pop	r14
    1db0:	0f 90       	pop	r0
    1db2:	0f be       	out	0x3f, r0	; 63
    1db4:	0f 90       	pop	r0
    1db6:	1f 90       	pop	r1
    1db8:	18 95       	reti

00001dba <__vector_9>:

ISR(TIMER1_OVF_vect)
{
    1dba:	1f 92       	push	r1
    1dbc:	0f 92       	push	r0
    1dbe:	0f b6       	in	r0, 0x3f	; 63
    1dc0:	0f 92       	push	r0
    1dc2:	11 24       	eor	r1, r1
    1dc4:	2f 93       	push	r18
    1dc6:	3f 93       	push	r19
    1dc8:	4f 93       	push	r20
    1dca:	5f 93       	push	r21
    1dcc:	6f 93       	push	r22
    1dce:	7f 93       	push	r23
    1dd0:	8f 93       	push	r24
    1dd2:	9f 93       	push	r25
    1dd4:	af 93       	push	r26
    1dd6:	bf 93       	push	r27
    1dd8:	ef 93       	push	r30
    1dda:	ff 93       	push	r31
    1ddc:	df 93       	push	r29
    1dde:	cf 93       	push	r28
    1de0:	cd b7       	in	r28, 0x3d	; 61
    1de2:	de b7       	in	r29, 0x3e	; 62
	ticks += 1;
    1de4:	80 91 68 01 	lds	r24, 0x0168
    1de8:	90 91 69 01 	lds	r25, 0x0169
    1dec:	a0 91 6a 01 	lds	r26, 0x016A
    1df0:	b0 91 6b 01 	lds	r27, 0x016B
    1df4:	bc 01       	movw	r22, r24
    1df6:	cd 01       	movw	r24, r26
    1df8:	20 e0       	ldi	r18, 0x00	; 0
    1dfa:	30 e0       	ldi	r19, 0x00	; 0
    1dfc:	40 e8       	ldi	r20, 0x80	; 128
    1dfe:	5f e3       	ldi	r21, 0x3F	; 63
    1e00:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__addsf3>
    1e04:	dc 01       	movw	r26, r24
    1e06:	cb 01       	movw	r24, r22
    1e08:	80 93 68 01 	sts	0x0168, r24
    1e0c:	90 93 69 01 	sts	0x0169, r25
    1e10:	a0 93 6a 01 	sts	0x016A, r26
    1e14:	b0 93 6b 01 	sts	0x016B, r27
}
    1e18:	cf 91       	pop	r28
    1e1a:	df 91       	pop	r29
    1e1c:	ff 91       	pop	r31
    1e1e:	ef 91       	pop	r30
    1e20:	bf 91       	pop	r27
    1e22:	af 91       	pop	r26
    1e24:	9f 91       	pop	r25
    1e26:	8f 91       	pop	r24
    1e28:	7f 91       	pop	r23
    1e2a:	6f 91       	pop	r22
    1e2c:	5f 91       	pop	r21
    1e2e:	4f 91       	pop	r20
    1e30:	3f 91       	pop	r19
    1e32:	2f 91       	pop	r18
    1e34:	0f 90       	pop	r0
    1e36:	0f be       	out	0x3f, r0	; 63
    1e38:	0f 90       	pop	r0
    1e3a:	1f 90       	pop	r1
    1e3c:	18 95       	reti

00001e3e <__prologue_saves__>:
    1e3e:	2f 92       	push	r2
    1e40:	3f 92       	push	r3
    1e42:	4f 92       	push	r4
    1e44:	5f 92       	push	r5
    1e46:	6f 92       	push	r6
    1e48:	7f 92       	push	r7
    1e4a:	8f 92       	push	r8
    1e4c:	9f 92       	push	r9
    1e4e:	af 92       	push	r10
    1e50:	bf 92       	push	r11
    1e52:	cf 92       	push	r12
    1e54:	df 92       	push	r13
    1e56:	ef 92       	push	r14
    1e58:	ff 92       	push	r15
    1e5a:	0f 93       	push	r16
    1e5c:	1f 93       	push	r17
    1e5e:	cf 93       	push	r28
    1e60:	df 93       	push	r29
    1e62:	cd b7       	in	r28, 0x3d	; 61
    1e64:	de b7       	in	r29, 0x3e	; 62
    1e66:	ca 1b       	sub	r28, r26
    1e68:	db 0b       	sbc	r29, r27
    1e6a:	0f b6       	in	r0, 0x3f	; 63
    1e6c:	f8 94       	cli
    1e6e:	de bf       	out	0x3e, r29	; 62
    1e70:	0f be       	out	0x3f, r0	; 63
    1e72:	cd bf       	out	0x3d, r28	; 61
    1e74:	09 94       	ijmp

00001e76 <__epilogue_restores__>:
    1e76:	2a 88       	ldd	r2, Y+18	; 0x12
    1e78:	39 88       	ldd	r3, Y+17	; 0x11
    1e7a:	48 88       	ldd	r4, Y+16	; 0x10
    1e7c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e7e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e80:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e82:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e84:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e86:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e88:	b9 84       	ldd	r11, Y+9	; 0x09
    1e8a:	c8 84       	ldd	r12, Y+8	; 0x08
    1e8c:	df 80       	ldd	r13, Y+7	; 0x07
    1e8e:	ee 80       	ldd	r14, Y+6	; 0x06
    1e90:	fd 80       	ldd	r15, Y+5	; 0x05
    1e92:	0c 81       	ldd	r16, Y+4	; 0x04
    1e94:	1b 81       	ldd	r17, Y+3	; 0x03
    1e96:	aa 81       	ldd	r26, Y+2	; 0x02
    1e98:	b9 81       	ldd	r27, Y+1	; 0x01
    1e9a:	ce 0f       	add	r28, r30
    1e9c:	d1 1d       	adc	r29, r1
    1e9e:	0f b6       	in	r0, 0x3f	; 63
    1ea0:	f8 94       	cli
    1ea2:	de bf       	out	0x3e, r29	; 62
    1ea4:	0f be       	out	0x3f, r0	; 63
    1ea6:	cd bf       	out	0x3d, r28	; 61
    1ea8:	ed 01       	movw	r28, r26
    1eaa:	08 95       	ret

00001eac <_exit>:
    1eac:	f8 94       	cli

00001eae <__stop_program>:
    1eae:	ff cf       	rjmp	.-2      	; 0x1eae <__stop_program>
